[{"C:\\react\\mood\\client\\src\\index.js":"1","C:\\react\\mood\\client\\src\\App.js":"2","C:\\react\\mood\\client\\src\\saga\\index.js":"3","C:\\react\\mood\\client\\src\\store.js":"4","C:\\react\\mood\\client\\src\\reducers\\index.js":"5","C:\\react\\mood\\client\\src\\reportWebVitals.js":"6","C:\\react\\mood\\client\\src\\components\\Nav\\index.js":"7","C:\\react\\mood\\client\\src\\components\\Chart\\index.js":"8","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js":"9","C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js":"10","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js":"11","C:\\react\\mood\\client\\src\\actions\\userAction.js":"12","C:\\react\\mood\\client\\src\\saga\\userSage.js":"13","C:\\react\\mood\\client\\src\\reducers\\userReducer.js":"14","C:\\react\\mood\\client\\src\\actions\\types.js":"15","C:\\react\\mood\\client\\src\\components\\Modal\\index.js":"16","C:\\react\\mood\\client\\src\\saga\\diarySaga.js":"17","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js":"18","C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js":"19","C:\\react\\mood\\client\\src\\saga\\globalSaga.js":"20","C:\\react\\mood\\client\\src\\actions\\globalAction.js":"21","C:\\react\\mood\\client\\src\\reducers\\globalReducer.js":"22","C:\\react\\mood\\client\\src\\components\\BG.js":"23","C:\\react\\mood\\client\\src\\actions\\diaryAction.js":"24"},{"size":568,"mtime":1607217815628,"results":"25","hashOfConfig":"26"},{"size":798,"mtime":1607218897431,"results":"27","hashOfConfig":"26"},{"size":212,"mtime":1607045407240,"results":"28","hashOfConfig":"26"},{"size":456,"mtime":1606562221579,"results":"29","hashOfConfig":"26"},{"size":234,"mtime":1607048971534,"results":"30","hashOfConfig":"26"},{"size":362,"mtime":1606480407518,"results":"31","hashOfConfig":"26"},{"size":1405,"mtime":1607144987576,"results":"32","hashOfConfig":"26"},{"size":3019,"mtime":1607317948132,"results":"33","hashOfConfig":"26"},{"size":4231,"mtime":1607317960341,"results":"34","hashOfConfig":"26"},{"size":5232,"mtime":1606999566982,"results":"35","hashOfConfig":"26"},{"size":3107,"mtime":1607055703669,"results":"36","hashOfConfig":"26"},{"size":612,"mtime":1607152587252,"results":"37","hashOfConfig":"26"},{"size":3304,"mtime":1607147174095,"results":"38","hashOfConfig":"26"},{"size":1543,"mtime":1607244895739,"results":"39","hashOfConfig":"26"},{"size":1653,"mtime":1607215659995,"results":"40","hashOfConfig":"26"},{"size":4040,"mtime":1607317655530,"results":"41","hashOfConfig":"26"},{"size":2195,"mtime":1607150916886,"results":"42","hashOfConfig":"26"},{"size":1204,"mtime":1607317921662,"results":"43","hashOfConfig":"26"},{"size":3729,"mtime":1607225838948,"results":"44","hashOfConfig":"26"},{"size":621,"mtime":1607219844942,"results":"45","hashOfConfig":"26"},{"size":124,"mtime":1607216020435,"results":"46","hashOfConfig":"26"},{"size":478,"mtime":1607217034406,"results":"47","hashOfConfig":"26"},{"size":390,"mtime":1607226082320,"results":"48","hashOfConfig":"26"},{"size":565,"mtime":1606617450896,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1g9e3iv",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\mood\\client\\src\\index.js",[],["114","115"],"C:\\react\\mood\\client\\src\\App.js",[],["116","117"],"C:\\react\\mood\\client\\src\\saga\\index.js",[],["118","119"],"C:\\react\\mood\\client\\src\\store.js",[],["120","121"],"C:\\react\\mood\\client\\src\\reducers\\index.js",[],["122","123"],"C:\\react\\mood\\client\\src\\reportWebVitals.js",[],["124","125"],"C:\\react\\mood\\client\\src\\components\\Nav\\index.js",[],["126","127"],"C:\\react\\mood\\client\\src\\components\\Chart\\index.js",["128","129","130"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Chart = ({date, mode}) =>{\r\n  const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n\r\n  const [count, setCount] = useState([0,0,0,0,0]);\r\n  \r\nconst getCount = () =>{\r\n    let one=0, two=0, three=0, four=0, five=0;\r\n    const splitDate = date.split(\"-\");\r\n    if(mode){\r\n      diaries.map(diary => {\r\n        if(diary.post_year===Number(splitDate[0]) && diary.post_month===Number(splitDate[1])) {\r\n          switch(Number(diary.mood)){\r\n            case 1:\r\n              one++;\r\n              break;\r\n            case 2:\r\n              two++;\r\n              break;\r\n            case 3:\r\n              three++;\r\n              break;\r\n            case 4:\r\n              four++;\r\n              break;\r\n            case 5:\r\n              five++;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      }\r\n    }\r\n  )}else{\r\n      diaries.map(diary => {\r\n        if(diary.post_year===Number(splitDate[0])) {\r\n          switch(Number(diary.mood)){\r\n            case 1:\r\n              one++;\r\n              break;\r\n            case 2:\r\n              two++;\r\n              break;\r\n            case 3:\r\n              three++;\r\n              break;\r\n            case 4:\r\n              four++;\r\n              break;\r\n            case 5:\r\n              five++;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      }\r\n    })\r\n  }\r\n  setCount([one, two, three, four, five]);\r\n};\r\n\r\n  useEffect(()=>{\r\n    getCount();\r\n  },[date, mode]);\r\n\r\n\r\nconst state = {\r\n    labels: ['SOOOO HAPPY', 'HAPPY', 'SOSO', 'BAD', 'UPSET'],\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: count,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(153, 102, 255, 0.2)'\r\n        ],\r\n        hoverBackgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)'\r\n        ],\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n             <Pie\r\n                data={state}\r\n                width={250}\r\n                height={100}\r\n                options={{\r\n                  responsive: false,\r\n                  maintainAspectRatio: false,\r\n                  legend: {\r\n                    display: false,\r\n                    position: 'bottom'\r\n                  }\r\n                }}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js",["131"],"C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js",["132","133","134","135"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {newUser} from '../../actions/userAction';\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst RegisterPage = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const registerResult = useSelector((state)=>state.userReducer.register);\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [nameCss, setNameCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n    const [confirmPwCss, setConfirmPwCss] = useState('');\r\n\r\n\r\n    console.log(registerResult);\r\n\r\n        const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        if (name === '') {\r\n            setNameCss('warning');\r\n            setTimeout(() => setNameCss(''), 1500);\r\n        }\r\n        if (confirmPassword === '') {\r\n            setConfirmPwCss('warning');\r\n            setTimeout(() => setConfirmPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '' &&\r\n                name !== '' &&\r\n                confirmPassword !== ''\r\n        ) {\r\n            dispatch(newUser({\r\n                    email,\r\n                    password,\r\n                    name\r\n            }))\r\n        }\r\n    };\r\n\r\n    const handlePw = (e) => {\r\n        if (e.currentTarget.value !== password) {\r\n            setConfirmPwCss('warning');\r\n        } else {\r\n            setConfirmPassword(e.currentTarget.value);\r\n            setConfirmPwCss('');\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(registerResult){\r\n            props.history.push('/login');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <h1>REGISTER</h1>\r\n            <section className=\"register-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setName(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"name\" className={nameCss}>\r\n                            NAME\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirm-pw\"\r\n                            id=\"confirm-pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={handlePw}\r\n                        />\r\n                        <label htmlFor=\"confirm-pw\" className={confirmPwCss}>\r\n                            CONFIRM PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            REGISTER\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/login\">Login 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;",["136","137"],"C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js",["138","139","140","141"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { login } from '../../actions/userAction';\r\nimport './styles.scss';\r\n\r\nconst LoginPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n\r\n    const isAuth = useSelector((state)=>state.userReducer.isAuth);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '') {\r\n            dispatch(login({email, password}));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            props.history.push('/');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>LOG IN</h1>\r\n            <section className=\"login-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            LOGIN\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/register\">register 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\react\\mood\\client\\src\\actions\\userAction.js",[],"C:\\react\\mood\\client\\src\\saga\\userSage.js",["142"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ME_REQUEST, \r\n    ME_SUCCESS, \r\n    ME_FAILURE, \r\n    EDIT_ME_REQUEST, \r\n    EDIT_ME_SUCCESS,\r\n    EDIT_ME_FAILURE, \r\n    NEW_ME_REQUEST, \r\n    NEW_ME_SUCCESS, \r\n    NEW_ME_FAILURE,\r\n    LOGIN_REQUEST, \r\n    LOGIN_SUCCESS, \r\n    LOGIN_FAILURE,\r\n    LOGOUT_SUCCESS, \r\n    LOGOUT_FAILURE,\r\n    LOGOUT_REQUEST} from '../actions/types';\r\n\r\nfunction* postLogin({payload}){\r\n    const result = yield axios.post(\"/api/user/login\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield put({type:LOGIN_SUCCESS, data});\r\n            console.log( data +\"여기 있음!!!\")\r\n            localStorage.setItem('user_token', data.user.token);\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:LOGIN_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postNewMe({payload}){\r\n    const result = yield axios.post(\"/api/user\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status } = result;\r\n        if(status === 201){\r\n            yield put({type:NEW_ME_SUCCESS});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:NEW_ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* getMe(){\r\n    const result = yield axios.get(\"/api/user\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data} = result;\r\n        if(status === 200){\r\n            yield put({type:ME_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postEditMe({payload}){\r\n    const result = yield axios.patch(\"/api/user\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            console.log(data);\r\n            yield put({type:EDIT_ME_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:EDIT_ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* deleteMe(){\r\n    const result = yield axios.delete(\"/api/user\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status } = result;\r\n        if(status === 200){\r\n            yield alert(result.data.message);\r\n            yield localStorage.removeItem('user_token');\r\n            yield put({type:LOGOUT_SUCCESS});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:LOGOUT_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* watchUser(){\r\n    yield takeEvery(NEW_ME_REQUEST, postNewMe);\r\n    yield takeEvery(LOGIN_REQUEST, postLogin);\r\n    yield takeEvery(ME_REQUEST, getMe);\r\n    yield takeEvery(EDIT_ME_REQUEST, postEditMe);\r\n    yield takeLatest(LOGOUT_REQUEST, deleteMe);\r\n}\r\n\r\nexport default function* userSaga () {\r\n    yield all([fork(watchUser)])\r\n}",["143","144"],"C:\\react\\mood\\client\\src\\reducers\\userReducer.js",[],"C:\\react\\mood\\client\\src\\actions\\types.js",[],"C:\\react\\mood\\client\\src\\components\\Modal\\index.js",["145","146"],"C:\\react\\mood\\client\\src\\saga\\diarySaga.js",["147","148","149","150","151","152","153","154"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    DIARY_REQUEST,\r\n    DIARY_SUCCESS,\r\n    DIARY_FAILURE,\r\n    EDIT_DIARY_REQUEST,\r\n    EDIT_DIARY_SUCCESS,\r\n    EDIT_DIARY_FAILURE,\r\n    NEW_DIARY_REQUEST,\r\n    NEW_DIARY_SUCCESS,\r\n    NEW_DIARY_FAILURE,\r\n    DELETE_DIARY_REQUEST,\r\n    DELETE_DIARY_SUCCESS,\r\n    DELETE_DIARY_FAILURE,\r\n    COUNT_REQUEST,\r\n    COUNT_SUCCESS,\r\n    COUNT_FAILURE\r\n} from '../actions/types';\r\n\r\nfunction* getDiary({payload}){\r\n    const result = yield axios.get(\"/api/diary\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield put({type:DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postDiary({payload}){\r\n    const result = yield axios.post(\"/api/diary\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 201){\r\n            yield put({type:NEW_DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:NEW_DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* patchDiary({payload}){\r\n    const result = yield axios.patch(\"/api/diary\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield alert(result.data.message);\r\n            yield put({type:EDIT_DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:EDIT_DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* watchDiary(){\r\n    yield takeEvery(DIARY_REQUEST, getDiary);\r\n    yield takeEvery(NEW_DIARY_REQUEST, postDiary);\r\n    yield takeEvery(EDIT_DIARY_REQUEST, patchDiary);\r\n}\r\n\r\nexport default function* diarySaga () {\r\n    yield all([fork(watchDiary)])\r\n}","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js",["155"],"C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js",["156"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMe, editMe} from '../../actions/userAction';\r\nimport {changeBG} from '../../actions/globalAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst SettingPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const colors = useSelector((state) => state.globalReducer.colors);\r\n  const isAuth = useSelector(state=>state.userReducer.isAuth);\r\n\r\n  const [name, setName] = useState(user.name);\r\n  const [selfPromise, setSelfPromise] = useState(user.selfPromise);\r\n  const [leftColor, setLeftColor] = useState(colors[0]);\r\n  const [midColor, setMidColor] = useState(colors[1]);\r\n  const [rightColor, setRightColor] = useState(colors[2]);\r\n  const handleProfile = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editMe({\r\n      name,\r\n      selfPromise\r\n    }))\r\n\r\n  };\r\n\r\n  const handleBG = (e) =>{\r\n    e.preventDefault();\r\n    dispatch(changeBG([leftColor, midColor, rightColor]));\r\n  }\r\n\r\n  useEffect(()=>{\r\n         if(isAuth === null){\r\n            props.history.push('/login');\r\n        }else{\r\n            if(Object.keys(user).length === 0){\r\n                dispatch(getMe())\r\n            }else{\r\n              setName(user.name);\r\n              setSelfPromise(user.selfPromise)\r\n            }\r\n        }\r\n  },[colors, user])\r\n\r\n  return (\r\n    <div className='setting-container'>\r\n        <div className=\"profile-box box\">\r\n            <h2 className='page-title'>PROFILE</h2>\r\n            <hr />\r\n              <form className='info-form' onSubmit={handleProfile}>\r\n                <p className='title'>E-MAIL</p>\r\n                <p className='email' name='email'>\r\n                  {user.email}\r\n                </p>\r\n                <p className='title'>NICK NAME</p>\r\n                <input\r\n                  type='text'\r\n                  name='nickname'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <p className='title'>SELF PROMISE</p>\r\n                <input\r\n                  type='text'\r\n                  name='goal'\r\n                  value={selfPromise}\r\n                  onChange={(e) => setSelfPromise(e.target.value)}\r\n                />\r\n                <button className='edit-btn' type='submit'>\r\n                  EDIT\r\n                </button>\r\n              </form>\r\n        </div>\r\n        <div className=\"bg-box box\">\r\n            <h2 className='page-title'>BG COLOR</h2>\r\n            <hr />\r\n            <div className=\"color-pick-box\">\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"left\">LEFT</label>\r\n                <input type=\"color\" id=\"left\" name=\"left\" value={leftColor} onChange={(e)=>setLeftColor(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"mid\">MIDDLE</label>\r\n                <input type=\"color\" id=\"mid\" name=\"mid\" value={midColor} onChange={(e)=>setMidColor(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"right\">RIGHT</label>\r\n                <input type=\"color\" id=\"right\" name=\"right\" value={rightColor} onChange={(e)=>setRightColor(e.currentTarget.value)}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"display-box\" style={{\"background\":`linear-gradient(0.25turn,${leftColor}, ${midColor}, ${rightColor})`}}></div>\r\n            <button className='bg-btn' onClick={handleBG}>\r\n                  적용하기\r\n            </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingPage;\r\n","C:\\react\\mood\\client\\src\\saga\\globalSaga.js",["157","158","159"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { BG_REQUEST, BG_SUCCESS, BG_FAILURE} from '../actions/types';\r\n\r\n\r\nfunction* changeBG({payload}){\r\n    try{\r\n        yield put({type:BG_SUCCESS, data:payload});\r\n        yield alert('배경색 변경 성공!');\r\n    }catch(error){\r\n        yield alert('배경색 변경에 실패했습니다.');\r\n        yield put({type:BG_FAILURE});\r\n    }\r\n}\r\n\r\n\r\nfunction* watchGlobal(){\r\n    yield takeEvery(BG_REQUEST, changeBG);\r\n}\r\n\r\nexport default function* globalSaga () {\r\n    yield all([fork(watchGlobal)])\r\n}","C:\\react\\mood\\client\\src\\actions\\globalAction.js",[],"C:\\react\\mood\\client\\src\\reducers\\globalReducer.js",[],"C:\\react\\mood\\client\\src\\components\\BG.js",[],"C:\\react\\mood\\client\\src\\actions\\diaryAction.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"160","replacedBy":"166"},{"ruleId":"162","replacedBy":"167"},{"ruleId":"160","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"162","replacedBy":"171"},{"ruleId":"160","replacedBy":"172"},{"ruleId":"162","replacedBy":"173"},{"ruleId":"160","replacedBy":"174"},{"ruleId":"162","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":14,"column":25,"nodeType":"178","messageId":"179","endLine":14,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":38,"column":25,"nodeType":"178","messageId":"179","endLine":38,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":67,"column":5,"nodeType":"182","endLine":67,"endColumn":17,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":96,"column":7,"nodeType":"182","endLine":96,"endColumn":26,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":44,"column":22,"nodeType":"188","messageId":"189","endLine":44,"endColumn":23,"suggestions":"190"},{"ruleId":"186","severity":1,"message":"191","line":44,"column":24,"nodeType":"188","messageId":"189","endLine":44,"endColumn":25,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"187","line":44,"column":37,"nodeType":"188","messageId":"189","endLine":44,"endColumn":38,"suggestions":"193"},{"ruleId":"186","severity":1,"message":"191","line":44,"column":39,"nodeType":"188","messageId":"189","endLine":44,"endColumn":40,"suggestions":"194"},{"ruleId":"160","replacedBy":"195"},{"ruleId":"162","replacedBy":"196"},{"ruleId":"186","severity":1,"message":"187","line":27,"column":22,"nodeType":"188","messageId":"189","endLine":27,"endColumn":23,"suggestions":"197"},{"ruleId":"186","severity":1,"message":"191","line":27,"column":24,"nodeType":"188","messageId":"189","endLine":27,"endColumn":25,"suggestions":"198"},{"ruleId":"186","severity":1,"message":"187","line":27,"column":37,"nodeType":"188","messageId":"189","endLine":27,"endColumn":38,"suggestions":"199"},{"ruleId":"186","severity":1,"message":"191","line":27,"column":39,"nodeType":"188","messageId":"189","endLine":27,"endColumn":40,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":48,"nodeType":"203","messageId":"204","endLine":1,"endColumn":52},{"ruleId":"160","replacedBy":"205"},{"ruleId":"162","replacedBy":"206"},{"ruleId":"176","severity":1,"message":"207","line":24,"column":29,"nodeType":"178","messageId":"208","endLine":24,"endColumn":31},{"ruleId":"180","severity":1,"message":"209","line":86,"column":5,"nodeType":"182","endLine":86,"endColumn":16,"suggestions":"210"},{"ruleId":"201","severity":1,"message":"211","line":1,"column":31,"nodeType":"203","messageId":"204","endLine":1,"endColumn":41},{"ruleId":"201","severity":1,"message":"202","line":1,"column":48,"nodeType":"203","messageId":"204","endLine":1,"endColumn":52},{"ruleId":"201","severity":1,"message":"212","line":13,"column":5,"nodeType":"203","messageId":"204","endLine":13,"endColumn":25},{"ruleId":"201","severity":1,"message":"213","line":14,"column":5,"nodeType":"203","messageId":"204","endLine":14,"endColumn":25},{"ruleId":"201","severity":1,"message":"214","line":15,"column":5,"nodeType":"203","messageId":"204","endLine":15,"endColumn":25},{"ruleId":"201","severity":1,"message":"215","line":16,"column":5,"nodeType":"203","messageId":"204","endLine":16,"endColumn":18},{"ruleId":"201","severity":1,"message":"216","line":17,"column":5,"nodeType":"203","messageId":"204","endLine":17,"endColumn":18},{"ruleId":"201","severity":1,"message":"217","line":18,"column":5,"nodeType":"203","messageId":"204","endLine":18,"endColumn":18},{"ruleId":"176","severity":1,"message":"218","line":29,"column":56,"nodeType":"178","messageId":"208","endLine":29,"endColumn":58},{"ruleId":"180","severity":1,"message":"219","line":44,"column":5,"nodeType":"182","endLine":44,"endColumn":19,"suggestions":"220"},{"ruleId":"201","severity":1,"message":"211","line":1,"column":31,"nodeType":"203","messageId":"204","endLine":1,"endColumn":41},{"ruleId":"201","severity":1,"message":"202","line":1,"column":48,"nodeType":"203","messageId":"204","endLine":1,"endColumn":52},{"ruleId":"201","severity":1,"message":"221","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":13},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],["222"],["223"],["222"],["223"],["222"],["223"],["222"],["223"],["222"],["223"],["222"],["223"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCount'. Either include it or remove the dependency array.","ArrayExpression",["224"],"React Hook useEffect has missing dependencies: 'diaries.length', 'dispatch', 'props.history', and 'user'. Either include them or remove the dependency array.",["225"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["226","227"],"Unnecessary escape character: \\..",["228","229"],["230","231"],["232","233"],["222"],["223"],["234","235"],["236","237"],["238","239"],["240","241"],"no-unused-vars","'call' is defined but never used.","Identifier","unusedVar",["222"],["223"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'date' and 'findDiaryData'. Either include them or remove the dependency array.",["242"],"'takeLatest' is defined but never used.","'DELETE_DIARY_REQUEST' is defined but never used.","'DELETE_DIARY_SUCCESS' is defined but never used.","'DELETE_DIARY_FAILURE' is defined but never used.","'COUNT_REQUEST' is defined but never used.","'COUNT_SUCCESS' is defined but never used.","'COUNT_FAILURE' is defined but never used.","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'dispatch', 'isAuth', and 'props.history'. Either include them or remove the dependency array.",["243"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"messageId":"248","fix":"249","desc":"250"},{"messageId":"251","fix":"252","desc":"253"},{"messageId":"248","fix":"254","desc":"250"},{"messageId":"251","fix":"255","desc":"253"},{"messageId":"248","fix":"256","desc":"250"},{"messageId":"251","fix":"257","desc":"253"},{"messageId":"248","fix":"258","desc":"250"},{"messageId":"251","fix":"259","desc":"253"},{"messageId":"248","fix":"260","desc":"250"},{"messageId":"251","fix":"261","desc":"253"},{"messageId":"248","fix":"262","desc":"250"},{"messageId":"251","fix":"263","desc":"253"},{"messageId":"248","fix":"264","desc":"250"},{"messageId":"251","fix":"265","desc":"253"},{"messageId":"248","fix":"266","desc":"250"},{"messageId":"251","fix":"267","desc":"253"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [date, getCount, mode]",{"range":"272","text":"273"},"Update the dependencies array to be: [diaries.length, dispatch, isAuth, isUpdated, props.history, user]",{"range":"274","text":"275"},"removeEscape",{"range":"276","text":"277"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"278","text":"279"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"280","text":"277"},{"range":"281","text":"279"},{"range":"282","text":"277"},{"range":"283","text":"279"},{"range":"284","text":"277"},{"range":"285","text":"279"},{"range":"286","text":"277"},{"range":"287","text":"279"},{"range":"288","text":"277"},{"range":"289","text":"279"},{"range":"290","text":"277"},{"range":"291","text":"279"},{"range":"292","text":"277"},{"range":"293","text":"279"},"Update the dependencies array to be: [date, findDiaryData, openModal]",{"range":"294","text":"295"},"Update the dependencies array to be: [colors, dispatch, isAuth, props.history, user]",{"range":"296","text":"297"},[1626,1638],"[date, getCount, mode]",[3466,3485],"[diaries.length, dispatch, isAuth, isUpdated, props.history, user]",[1479,1480],"",[1479,1479],"\\",[1481,1482],[1481,1481],[1494,1495],[1494,1494],[1496,1497],[1496,1496],[928,929],[928,928],[930,931],[930,930],[943,944],[943,943],[945,946],[945,945],[2179,2190],"[date, findDiaryData, openModal]",[1390,1404],"[colors, dispatch, isAuth, props.history, user]"]