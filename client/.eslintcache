[{"C:\\react\\mood\\client\\src\\index.js":"1","C:\\react\\mood\\client\\src\\App.js":"2","C:\\react\\mood\\client\\src\\saga\\index.js":"3","C:\\react\\mood\\client\\src\\store.js":"4","C:\\react\\mood\\client\\src\\reducers\\index.js":"5","C:\\react\\mood\\client\\src\\reportWebVitals.js":"6","C:\\react\\mood\\client\\src\\components\\Nav\\index.js":"7","C:\\react\\mood\\client\\src\\components\\Chart\\index.js":"8","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js":"9","C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js":"10","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js":"11","C:\\react\\mood\\client\\src\\actions\\userAction.js":"12","C:\\react\\mood\\client\\src\\saga\\userSage.js":"13","C:\\react\\mood\\client\\src\\reducers\\userReducer.js":"14","C:\\react\\mood\\client\\src\\actions\\types.js":"15","C:\\react\\mood\\client\\src\\components\\Modal\\index.js":"16","C:\\react\\mood\\client\\src\\saga\\diarySaga.js":"17","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js":"18","C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js":"19","C:\\react\\mood\\client\\src\\saga\\globalSaga.js":"20","C:\\react\\mood\\client\\src\\actions\\globalAction.js":"21","C:\\react\\mood\\client\\src\\reducers\\globalReducer.js":"22","C:\\react\\mood\\client\\src\\components\\BG.js":"23","C:\\react\\mood\\client\\src\\actions\\diaryAction.js":"24"},{"size":568,"mtime":1607217815628,"results":"25","hashOfConfig":"26"},{"size":798,"mtime":1607218897431,"results":"27","hashOfConfig":"26"},{"size":212,"mtime":1607045407240,"results":"28","hashOfConfig":"26"},{"size":456,"mtime":1606562221579,"results":"29","hashOfConfig":"26"},{"size":234,"mtime":1607048971534,"results":"30","hashOfConfig":"26"},{"size":362,"mtime":1606480407518,"results":"31","hashOfConfig":"26"},{"size":1405,"mtime":1607144987576,"results":"32","hashOfConfig":"26"},{"size":3022,"mtime":1607319019366,"results":"33","hashOfConfig":"26"},{"size":4223,"mtime":1607405839946,"results":"34","hashOfConfig":"26"},{"size":5184,"mtime":1607403728357,"results":"35","hashOfConfig":"26"},{"size":3176,"mtime":1607405547496,"results":"36","hashOfConfig":"26"},{"size":510,"mtime":1607318595149,"results":"37","hashOfConfig":"26"},{"size":3535,"mtime":1607407063590,"results":"38","hashOfConfig":"26"},{"size":1543,"mtime":1607402847128,"results":"39","hashOfConfig":"26"},{"size":1331,"mtime":1607318641992,"results":"40","hashOfConfig":"26"},{"size":4040,"mtime":1607317655530,"results":"41","hashOfConfig":"26"},{"size":2204,"mtime":1607407031342,"results":"42","hashOfConfig":"26"},{"size":1204,"mtime":1607317921662,"results":"43","hashOfConfig":"26"},{"size":3719,"mtime":1607405936114,"results":"44","hashOfConfig":"26"},{"size":572,"mtime":1607319090539,"results":"45","hashOfConfig":"26"},{"size":124,"mtime":1607216020435,"results":"46","hashOfConfig":"26"},{"size":478,"mtime":1607217034406,"results":"47","hashOfConfig":"26"},{"size":390,"mtime":1607226082320,"results":"48","hashOfConfig":"26"},{"size":352,"mtime":1607318757327,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1g9e3iv",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\mood\\client\\src\\index.js",[],["111","112"],"C:\\react\\mood\\client\\src\\App.js",[],["113","114"],"C:\\react\\mood\\client\\src\\saga\\index.js",[],["115","116"],"C:\\react\\mood\\client\\src\\store.js",[],["117","118"],"C:\\react\\mood\\client\\src\\reducers\\index.js",[],["119","120"],"C:\\react\\mood\\client\\src\\reportWebVitals.js",[],["121","122"],"C:\\react\\mood\\client\\src\\components\\Nav\\index.js",[],["123","124"],"C:\\react\\mood\\client\\src\\components\\Chart\\index.js",["125","126","127"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Chart = ({date, mode}) =>{\r\n  const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n\r\n  const [count, setCount] = useState([0,0,0,0,0]);\r\n  \r\nconst getCount = () =>{\r\n    let one=0, two=0, three=0, four=0, five=0;\r\n    const splitDate = date.split(\"-\");\r\n    if(mode){\r\n      diaries.map(diary => {\r\n        if(diary.post_year===Number(splitDate[0]) && diary.post_month===Number(splitDate[1])) {\r\n          switch(Number(diary.mood)){\r\n            case 1:\r\n              one++;\r\n              break;\r\n            case 2:\r\n              two++;\r\n              break;\r\n            case 3:\r\n              three++;\r\n              break;\r\n            case 4:\r\n              four++;\r\n              break;\r\n            case 5:\r\n              five++;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      }\r\n    }\r\n  )}else{\r\n      diaries.map(diary => {\r\n        if(diary.post_year===Number(splitDate[0])) {\r\n          switch(Number(diary.mood)){\r\n            case 1:\r\n              one++;\r\n              break;\r\n            case 2:\r\n              two++;\r\n              break;\r\n            case 3:\r\n              three++;\r\n              break;\r\n            case 4:\r\n              four++;\r\n              break;\r\n            case 5:\r\n              five++;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      }\r\n    })\r\n  }\r\n  setCount([one, two, three, four, five]);\r\n};\r\n\r\nuseEffect(()=>{\r\n  getCount();\r\n},[date, mode, diaries]);\r\n\r\n\r\nconst state = {\r\n    labels: ['SOOOO HAPPY', 'HAPPY', 'SOSO', 'BAD', 'UPSET'],\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: count,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(153, 102, 255, 0.2)'\r\n        ],\r\n        hoverBackgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)'\r\n        ],\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n             <Pie\r\n                data={state}\r\n                width={250}\r\n                height={100}\r\n                options={{\r\n                  responsive: false,\r\n                  maintainAspectRatio: false,\r\n                  legend: {\r\n                    display: false,\r\n                    position: 'bottom'\r\n                  }\r\n                }}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js",["128"],"C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js",["129","130","131","132"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {newUser} from '../../actions/userAction';\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst RegisterPage = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const register = useSelector((state)=>state.userReducer.register);\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [nameCss, setNameCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n    const [confirmPwCss, setConfirmPwCss] = useState('');\r\n\r\n\r\n        const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        if (name === '') {\r\n            setNameCss('warning');\r\n            setTimeout(() => setNameCss(''), 1500);\r\n        }\r\n        if (confirmPassword === '') {\r\n            setConfirmPwCss('warning');\r\n            setTimeout(() => setConfirmPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '' &&\r\n                name !== '' &&\r\n                confirmPassword !== ''\r\n        ) {\r\n            dispatch(newUser({\r\n                    email,\r\n                    password,\r\n                    name\r\n            }))\r\n        }\r\n    };\r\n\r\n    const handlePw = (e) => {\r\n        if (e.currentTarget.value !== password) {\r\n            setConfirmPwCss('warning');\r\n        } else {\r\n            setConfirmPassword(e.currentTarget.value);\r\n            setConfirmPwCss('');\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(register){\r\n            props.history.push('/login');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <h1>REGISTER</h1>\r\n            <section className=\"register-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setName(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"name\" className={nameCss}>\r\n                            NAME\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirm-pw\"\r\n                            id=\"confirm-pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={handlePw}\r\n                        />\r\n                        <label htmlFor=\"confirm-pw\" className={confirmPwCss}>\r\n                            CONFIRM PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            REGISTER\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/login\">Login 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js",["133","134","135","136"],"C:\\react\\mood\\client\\src\\actions\\userAction.js",[],"C:\\react\\mood\\client\\src\\saga\\userSage.js",[],"C:\\react\\mood\\client\\src\\reducers\\userReducer.js",[],"C:\\react\\mood\\client\\src\\actions\\types.js",[],"C:\\react\\mood\\client\\src\\components\\Modal\\index.js",["137","138"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from 'antd';\r\nimport { newDiary, editDiary } from '../../actions/diaryAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst ModalPage = ({ date, openModal }) => {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = useState(openModal);\r\n  const [mood, setMood] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [isEditDiary, setIsEditDiary] = useState(false); // true면 글을 수정하는것, false면 글을 처음쓰는것\r\n  const [diaryId, setDiaryId] = useState('');\r\n  const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n\r\n  const findDiaryData = () =>{\r\n    console.log(diaries);\r\n    console.log('이거좀실행되라ㅡㅡ')\r\n    const splitedDate = date.split('-');\r\n    \r\n    let dayInfo = [];\r\n    dayInfo = diaries &&\r\n      diaries.filter((item) => {\r\n        if (item.post_year === Number(splitedDate[0]) && item.post_month === Number(splitedDate[1]) && item.post_day === Number(splitedDate[2])) {\r\n          return true;\r\n        }\r\n      });\r\n    if(dayInfo !== null){\r\n      if(dayInfo.length > 0){\r\n        setIsEditDiary(true);\r\n        setMood(dayInfo[0].mood);\r\n        setContent(dayInfo[0].content);\r\n        setDiaryId(dayInfo[0]._id);\r\n      }else{\r\n        setIsEditDiary(false);\r\n        setMood(\"\");\r\n        setContent(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOk = (e) => {\r\n    e.preventDefault();\r\n    if (mood === '') {\r\n      alert('mood를 선택해 주세요');\r\n      return;\r\n    }\r\n    if (content === '') {\r\n      alert('일기를 작성해 주세요');\r\n      return;\r\n    }\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n\r\n    if (isEditDiary) {\r\n        dispatch(editDiary({\r\n          diaryId,\r\n          mood,\r\n          content\r\n        })\r\n      )\r\n    } else {\r\n        dispatch(newDiary({\r\n            date,\r\n            mood,\r\n            content\r\n          })\r\n        )\r\n      }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(date);\r\n    if (openModal) {\r\n      setVisible(true);\r\n      findDiaryData();\r\n    }\r\n  },[openModal]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={date}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width='600px'\r\n        wrapClassName='modal-container'\r\n      >\r\n        <form className='form-diary'>\r\n          <ul className='mood'>\r\n            <li\r\n              value='1'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"1\" ? 'listClicked' : ''}\r\n              title=\"SOOOO HAPPY\"\r\n            >\r\n              😁\r\n            </li>\r\n            <li\r\n              value='2'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"2\" ? 'listClicked' : ''}\r\n              title=\"=HAPPY\"\r\n            >\r\n              🌝\r\n            </li>\r\n            <li\r\n              value='3'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"3\" ? 'listClicked' : ''}\r\n              title=\"SOSO\"\r\n            >\r\n              😐\r\n            </li>\r\n            <li\r\n              value='4'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"4\" ? 'listClicked' : ''}\r\n              title=\"BAD\"\r\n            >\r\n              😭\r\n            </li>\r\n            <li\r\n              value='5'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"5\" ? 'listClicked' : ''}\r\n              title=\"UPSET\"\r\n            >\r\n              😡\r\n            </li>\r\n          </ul>\r\n          <textarea\r\n            onChange={(e) => setContent(e.currentTarget.value)}\r\n            value={content}\r\n          ></textarea>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalPage;\r\n","C:\\react\\mood\\client\\src\\saga\\diarySaga.js",[],"C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js",["139"],"import {\r\n    DIARY_SUCCESS,\r\n    DIARY_FAILURE,\r\n    EDIT_DIARY_SUCCESS,\r\n    EDIT_DIARY_FAILURE,\r\n    NEW_DIARY_SUCCESS,\r\n    NEW_DIARY_FAILURE,\r\n} from '../actions/types';\r\n\r\nconst initState = {\r\n    diaries :[],\r\n    isUpdated : null\r\n}\r\n\r\nconst userReducer = ( state = initState , action) => {\r\n    switch(action.type){\r\n        case NEW_DIARY_SUCCESS :\r\n            state.diaries.push(action.data.diary)\r\n            state.isUpdated = action.data.diary._id;\r\n            return { ...state };\r\n        case NEW_DIARY_FAILURE :\r\n            return { ...state };\r\n        case DIARY_SUCCESS :\r\n            state.diaries = action.data.diaries;\r\n            return { ...state };\r\n        case DIARY_FAILURE :\r\n            return { ...state };      \r\n        case EDIT_DIARY_SUCCESS :\r\n            const id = state.diaries.findIndex((diary) => {if(diary._id === action.data.diary._id){return true}});\r\n            state.diaries[id] = action.data.diary;\r\n            state.isUpdated = action.data.diary._id;\r\n            return { ...state };\r\n        case EDIT_DIARY_FAILURE :\r\n            return { ...state };    \r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n\r\nexport default userReducer;","C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js",["140"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMe, editMe} from '../../actions/userAction';\r\nimport {changeBG} from '../../actions/globalAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst SettingPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const colors = useSelector((state) => state.globalReducer.colors);\r\n  const isAuth = useSelector(state=>state.userReducer.isAuth);\r\n\r\n  const [name, setName] = useState(user.name);\r\n  const [selfPromise, setSelfPromise] = useState(user.selfPromise);\r\n  const [leftColor, setLeftColor] = useState(colors[0]);\r\n  const [midColor, setMidColor] = useState(colors[1]);\r\n  const [rightColor, setRightColor] = useState(colors[2]);\r\n  const handleProfile = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editMe({\r\n      name,\r\n      selfPromise\r\n    }))\r\n\r\n  };\r\n\r\n  const handleBG = (e) =>{\r\n    e.preventDefault();\r\n    dispatch(changeBG([leftColor, midColor, rightColor]));\r\n  }\r\n\r\n  useEffect(()=>{\r\n        if(!isAuth){\r\n            props.history.push(\"/login\");\r\n        }else{\r\n           if(Object.keys(user).length === 0){\r\n                dispatch(getMe())\r\n            }else{\r\n              setName(user.name);\r\n              setSelfPromise(user.selfPromise)\r\n            }\r\n        }\r\n  },[colors, user])\r\n\r\n  return (\r\n    <div className='setting-container'>\r\n        <div className=\"profile-box box\">\r\n            <h2 className='page-title'>PROFILE</h2>\r\n            <hr />\r\n              <form className='info-form' onSubmit={handleProfile}>\r\n                <p className='title'>E-MAIL</p>\r\n                <p className='email' name='email'>\r\n                  {user.email}\r\n                </p>\r\n                <p className='title'>NICK NAME</p>\r\n                <input\r\n                  type='text'\r\n                  name='nickname'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <p className='title'>SELF PROMISE</p>\r\n                <input\r\n                  type='text'\r\n                  name='goal'\r\n                  value={selfPromise}\r\n                  onChange={(e) => setSelfPromise(e.target.value)}\r\n                />\r\n                <button className='edit-btn' type='submit'>\r\n                  EDIT\r\n                </button>\r\n              </form>\r\n        </div>\r\n        <div className=\"bg-box box\">\r\n            <h2 className='page-title'>BG COLOR</h2>\r\n            <hr />\r\n            <div className=\"color-pick-box\">\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"left\">LEFT</label>\r\n                <input type=\"color\" id=\"left\" name=\"left\" value={leftColor} onChange={(e)=>setLeftColor(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"mid\">MIDDLE</label>\r\n                <input type=\"color\" id=\"mid\" name=\"mid\" value={midColor} onChange={(e)=>setMidColor(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"right\">RIGHT</label>\r\n                <input type=\"color\" id=\"right\" name=\"right\" value={rightColor} onChange={(e)=>setRightColor(e.currentTarget.value)}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"display-box\" style={{\"background\":`linear-gradient(0.25turn,${leftColor}, ${midColor}, ${rightColor})`}}></div>\r\n            <button className='bg-btn' onClick={handleBG}>\r\n                  적용하기\r\n            </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingPage;\r\n","C:\\react\\mood\\client\\src\\saga\\globalSaga.js",[],"C:\\react\\mood\\client\\src\\actions\\globalAction.js",[],"C:\\react\\mood\\client\\src\\reducers\\globalReducer.js",[],["141","142"],"C:\\react\\mood\\client\\src\\components\\BG.js",[],"C:\\react\\mood\\client\\src\\actions\\diaryAction.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"143","replacedBy":"149"},{"ruleId":"145","replacedBy":"150"},{"ruleId":"143","replacedBy":"151"},{"ruleId":"145","replacedBy":"152"},{"ruleId":"143","replacedBy":"153"},{"ruleId":"145","replacedBy":"154"},{"ruleId":"143","replacedBy":"155"},{"ruleId":"145","replacedBy":"156"},{"ruleId":"143","replacedBy":"157"},{"ruleId":"145","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":14,"column":25,"nodeType":"161","messageId":"162","endLine":14,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":38,"column":25,"nodeType":"161","messageId":"162","endLine":38,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":67,"column":3,"nodeType":"165","endLine":67,"endColumn":24,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":96,"column":7,"nodeType":"165","endLine":96,"endColumn":26,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":42,"column":22,"nodeType":"171","messageId":"172","endLine":42,"endColumn":23,"suggestions":"173"},{"ruleId":"169","severity":1,"message":"174","line":42,"column":24,"nodeType":"171","messageId":"172","endLine":42,"endColumn":25,"suggestions":"175"},{"ruleId":"169","severity":1,"message":"170","line":42,"column":37,"nodeType":"171","messageId":"172","endLine":42,"endColumn":38,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"174","line":42,"column":39,"nodeType":"171","messageId":"172","endLine":42,"endColumn":40,"suggestions":"177"},{"ruleId":"169","severity":1,"message":"170","line":28,"column":22,"nodeType":"171","messageId":"172","endLine":28,"endColumn":23,"suggestions":"178"},{"ruleId":"169","severity":1,"message":"174","line":28,"column":24,"nodeType":"171","messageId":"172","endLine":28,"endColumn":25,"suggestions":"179"},{"ruleId":"169","severity":1,"message":"170","line":28,"column":37,"nodeType":"171","messageId":"172","endLine":28,"endColumn":38,"suggestions":"180"},{"ruleId":"169","severity":1,"message":"174","line":28,"column":39,"nodeType":"171","messageId":"172","endLine":28,"endColumn":40,"suggestions":"181"},{"ruleId":"159","severity":1,"message":"182","line":24,"column":29,"nodeType":"161","messageId":"183","endLine":24,"endColumn":31},{"ruleId":"163","severity":1,"message":"184","line":86,"column":5,"nodeType":"165","endLine":86,"endColumn":16,"suggestions":"185"},{"ruleId":"159","severity":1,"message":"186","line":29,"column":56,"nodeType":"161","messageId":"183","endLine":29,"endColumn":58},{"ruleId":"163","severity":1,"message":"187","line":44,"column":5,"nodeType":"165","endLine":44,"endColumn":19,"suggestions":"188"},{"ruleId":"143","replacedBy":"189"},{"ruleId":"145","replacedBy":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],["191"],["192"],["191"],["192"],["191"],["192"],["191"],["192"],["191"],["192"],["191"],["192"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCount'. Either include it or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'diaries.length', 'dispatch', 'props.history', and 'user'. Either include them or remove the dependency array.",["194"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["195","196"],"Unnecessary escape character: \\..",["197","198"],["199","200"],["201","202"],["203","204"],["205","206"],["207","208"],["209","210"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'date' and 'findDiaryData'. Either include them or remove the dependency array.",["211"],"Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'dispatch', 'isAuth', and 'props.history'. Either include them or remove the dependency array.",["212"],["191"],["192"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"messageId":"217","fix":"218","desc":"219"},{"messageId":"220","fix":"221","desc":"222"},{"messageId":"217","fix":"223","desc":"219"},{"messageId":"220","fix":"224","desc":"222"},{"messageId":"217","fix":"225","desc":"219"},{"messageId":"220","fix":"226","desc":"222"},{"messageId":"217","fix":"227","desc":"219"},{"messageId":"220","fix":"228","desc":"222"},{"messageId":"217","fix":"229","desc":"219"},{"messageId":"220","fix":"230","desc":"222"},{"messageId":"217","fix":"231","desc":"219"},{"messageId":"220","fix":"232","desc":"222"},{"messageId":"217","fix":"233","desc":"219"},{"messageId":"220","fix":"234","desc":"222"},{"messageId":"217","fix":"235","desc":"219"},{"messageId":"220","fix":"236","desc":"222"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [date, mode, diaries, getCount]",{"range":"241","text":"242"},"Update the dependencies array to be: [diaries.length, dispatch, isAuth, isUpdated, props.history, user]",{"range":"243","text":"244"},"removeEscape",{"range":"245","text":"246"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"247","text":"248"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"249","text":"246"},{"range":"250","text":"248"},{"range":"251","text":"246"},{"range":"252","text":"248"},{"range":"253","text":"246"},{"range":"254","text":"248"},{"range":"255","text":"246"},{"range":"256","text":"248"},{"range":"257","text":"246"},{"range":"258","text":"248"},{"range":"259","text":"246"},{"range":"260","text":"248"},{"range":"261","text":"246"},{"range":"262","text":"248"},"Update the dependencies array to be: [date, findDiaryData, openModal]",{"range":"263","text":"264"},"Update the dependencies array to be: [colors, dispatch, isAuth, props.history, user]",{"range":"265","text":"266"},[1620,1641],"[date, mode, diaries, getCount]",[3458,3477],"[diaries.length, dispatch, isAuth, isUpdated, props.history, user]",[1437,1438],"",[1437,1437],"\\",[1439,1440],[1439,1439],[1452,1453],[1452,1452],[1454,1455],[1454,1454],[975,976],[975,975],[977,978],[977,977],[990,991],[990,990],[992,993],[992,992],[2179,2190],"[date, findDiaryData, openModal]",[1380,1394],"[colors, dispatch, isAuth, props.history, user]"]