[{"C:\\react\\mood\\client\\src\\index.js":"1","C:\\react\\mood\\client\\src\\App.js":"2","C:\\react\\mood\\client\\src\\saga\\index.js":"3","C:\\react\\mood\\client\\src\\store.js":"4","C:\\react\\mood\\client\\src\\reducers\\index.js":"5","C:\\react\\mood\\client\\src\\reportWebVitals.js":"6","C:\\react\\mood\\client\\src\\components\\Nav\\index.js":"7","C:\\react\\mood\\client\\src\\components\\Chart\\index.js":"8","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js":"9","C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js":"10","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js":"11","C:\\react\\mood\\client\\src\\actions\\userAction.js":"12","C:\\react\\mood\\client\\src\\saga\\userSage.js":"13","C:\\react\\mood\\client\\src\\reducers\\userReducer.js":"14","C:\\react\\mood\\client\\src\\actions\\types.js":"15","C:\\react\\mood\\client\\src\\components\\Modal\\index.js":"16","C:\\react\\mood\\client\\src\\saga\\diarySaga.js":"17","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js":"18","C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js":"19","C:\\react\\mood\\client\\src\\saga\\globalSaga.js":"20","C:\\react\\mood\\client\\src\\actions\\globalAction.js":"21","C:\\react\\mood\\client\\src\\reducers\\globalReducer.js":"22","C:\\react\\mood\\client\\src\\components\\BG.js":"23","C:\\react\\mood\\client\\src\\actions\\diaryAction.js":"24"},{"size":568,"mtime":1607217815628,"results":"25","hashOfConfig":"26"},{"size":798,"mtime":1607218897431,"results":"27","hashOfConfig":"26"},{"size":212,"mtime":1607045407240,"results":"28","hashOfConfig":"26"},{"size":456,"mtime":1606562221579,"results":"29","hashOfConfig":"26"},{"size":234,"mtime":1607048971534,"results":"30","hashOfConfig":"26"},{"size":362,"mtime":1606480407518,"results":"31","hashOfConfig":"26"},{"size":1405,"mtime":1607144987576,"results":"32","hashOfConfig":"26"},{"size":3022,"mtime":1607319019366,"results":"33","hashOfConfig":"26"},{"size":4231,"mtime":1607317960341,"results":"34","hashOfConfig":"26"},{"size":5232,"mtime":1606999566982,"results":"35","hashOfConfig":"26"},{"size":3107,"mtime":1607055703669,"results":"36","hashOfConfig":"26"},{"size":510,"mtime":1607318595149,"results":"37","hashOfConfig":"26"},{"size":3298,"mtime":1607318657936,"results":"38","hashOfConfig":"26"},{"size":1543,"mtime":1607244895739,"results":"39","hashOfConfig":"26"},{"size":1331,"mtime":1607318641992,"results":"40","hashOfConfig":"26"},{"size":4040,"mtime":1607317655530,"results":"41","hashOfConfig":"26"},{"size":2036,"mtime":1607318638423,"results":"42","hashOfConfig":"26"},{"size":1204,"mtime":1607317921662,"results":"43","hashOfConfig":"26"},{"size":3729,"mtime":1607225838948,"results":"44","hashOfConfig":"26"},{"size":572,"mtime":1607319090539,"results":"45","hashOfConfig":"26"},{"size":124,"mtime":1607216020435,"results":"46","hashOfConfig":"26"},{"size":478,"mtime":1607217034406,"results":"47","hashOfConfig":"26"},{"size":390,"mtime":1607226082320,"results":"48","hashOfConfig":"26"},{"size":352,"mtime":1607318757327,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1g9e3iv",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\mood\\client\\src\\index.js",[],["110","111"],"C:\\react\\mood\\client\\src\\App.js",[],["112","113"],"C:\\react\\mood\\client\\src\\saga\\index.js",[],["114","115"],"C:\\react\\mood\\client\\src\\store.js",[],["116","117"],"C:\\react\\mood\\client\\src\\reducers\\index.js",[],["118","119"],"C:\\react\\mood\\client\\src\\reportWebVitals.js",[],["120","121"],"C:\\react\\mood\\client\\src\\components\\Nav\\index.js",[],["122","123"],"C:\\react\\mood\\client\\src\\components\\Chart\\index.js",["124","125","126"],"C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js",["127"],"C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js",["128","129","130","131"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {newUser} from '../../actions/userAction';\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst RegisterPage = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const registerResult = useSelector((state)=>state.userReducer.register);\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [nameCss, setNameCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n    const [confirmPwCss, setConfirmPwCss] = useState('');\r\n\r\n\r\n    console.log(registerResult);\r\n\r\n        const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        if (name === '') {\r\n            setNameCss('warning');\r\n            setTimeout(() => setNameCss(''), 1500);\r\n        }\r\n        if (confirmPassword === '') {\r\n            setConfirmPwCss('warning');\r\n            setTimeout(() => setConfirmPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '' &&\r\n                name !== '' &&\r\n                confirmPassword !== ''\r\n        ) {\r\n            dispatch(newUser({\r\n                    email,\r\n                    password,\r\n                    name\r\n            }))\r\n        }\r\n    };\r\n\r\n    const handlePw = (e) => {\r\n        if (e.currentTarget.value !== password) {\r\n            setConfirmPwCss('warning');\r\n        } else {\r\n            setConfirmPassword(e.currentTarget.value);\r\n            setConfirmPwCss('');\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(registerResult){\r\n            props.history.push('/login');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <h1>REGISTER</h1>\r\n            <section className=\"register-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setName(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"name\" className={nameCss}>\r\n                            NAME\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirm-pw\"\r\n                            id=\"confirm-pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={handlePw}\r\n                        />\r\n                        <label htmlFor=\"confirm-pw\" className={confirmPwCss}>\r\n                            CONFIRM PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            REGISTER\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/login\">Login 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;",["132","133"],"C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js",["134","135","136","137"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { login } from '../../actions/userAction';\r\nimport './styles.scss';\r\n\r\nconst LoginPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n\r\n    const isAuth = useSelector((state)=>state.userReducer.isAuth);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '') {\r\n            dispatch(login({email, password}));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            props.history.push('/');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>LOG IN</h1>\r\n            <section className=\"login-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            LOGIN\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/register\">register 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\react\\mood\\client\\src\\actions\\userAction.js",[],"C:\\react\\mood\\client\\src\\saga\\userSage.js",[],"C:\\react\\mood\\client\\src\\reducers\\userReducer.js",[],["138","139"],"C:\\react\\mood\\client\\src\\actions\\types.js",[],"C:\\react\\mood\\client\\src\\components\\Modal\\index.js",["140","141"],"C:\\react\\mood\\client\\src\\saga\\diarySaga.js",[],"C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js",["142"],"C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js",["143"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMe, editMe} from '../../actions/userAction';\r\nimport {changeBG} from '../../actions/globalAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst SettingPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const colors = useSelector((state) => state.globalReducer.colors);\r\n  const isAuth = useSelector(state=>state.userReducer.isAuth);\r\n\r\n  const [name, setName] = useState(user.name);\r\n  const [selfPromise, setSelfPromise] = useState(user.selfPromise);\r\n  const [leftColor, setLeftColor] = useState(colors[0]);\r\n  const [midColor, setMidColor] = useState(colors[1]);\r\n  const [rightColor, setRightColor] = useState(colors[2]);\r\n  const handleProfile = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editMe({\r\n      name,\r\n      selfPromise\r\n    }))\r\n\r\n  };\r\n\r\n  const handleBG = (e) =>{\r\n    e.preventDefault();\r\n    dispatch(changeBG([leftColor, midColor, rightColor]));\r\n  }\r\n\r\n  useEffect(()=>{\r\n         if(isAuth === null){\r\n            props.history.push('/login');\r\n        }else{\r\n            if(Object.keys(user).length === 0){\r\n                dispatch(getMe())\r\n            }else{\r\n              setName(user.name);\r\n              setSelfPromise(user.selfPromise)\r\n            }\r\n        }\r\n  },[colors, user])\r\n\r\n  return (\r\n    <div className='setting-container'>\r\n        <div className=\"profile-box box\">\r\n            <h2 className='page-title'>PROFILE</h2>\r\n            <hr />\r\n              <form className='info-form' onSubmit={handleProfile}>\r\n                <p className='title'>E-MAIL</p>\r\n                <p className='email' name='email'>\r\n                  {user.email}\r\n                </p>\r\n                <p className='title'>NICK NAME</p>\r\n                <input\r\n                  type='text'\r\n                  name='nickname'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <p className='title'>SELF PROMISE</p>\r\n                <input\r\n                  type='text'\r\n                  name='goal'\r\n                  value={selfPromise}\r\n                  onChange={(e) => setSelfPromise(e.target.value)}\r\n                />\r\n                <button className='edit-btn' type='submit'>\r\n                  EDIT\r\n                </button>\r\n              </form>\r\n        </div>\r\n        <div className=\"bg-box box\">\r\n            <h2 className='page-title'>BG COLOR</h2>\r\n            <hr />\r\n            <div className=\"color-pick-box\">\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"left\">LEFT</label>\r\n                <input type=\"color\" id=\"left\" name=\"left\" value={leftColor} onChange={(e)=>setLeftColor(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"mid\">MIDDLE</label>\r\n                <input type=\"color\" id=\"mid\" name=\"mid\" value={midColor} onChange={(e)=>setMidColor(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"right\">RIGHT</label>\r\n                <input type=\"color\" id=\"right\" name=\"right\" value={rightColor} onChange={(e)=>setRightColor(e.currentTarget.value)}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"display-box\" style={{\"background\":`linear-gradient(0.25turn,${leftColor}, ${midColor}, ${rightColor})`}}></div>\r\n            <button className='bg-btn' onClick={handleBG}>\r\n                  적용하기\r\n            </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingPage;\r\n","C:\\react\\mood\\client\\src\\saga\\globalSaga.js",[],"C:\\react\\mood\\client\\src\\actions\\globalAction.js",[],"C:\\react\\mood\\client\\src\\reducers\\globalReducer.js",[],"C:\\react\\mood\\client\\src\\components\\BG.js",[],"C:\\react\\mood\\client\\src\\actions\\diaryAction.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"148"},{"ruleId":"146","replacedBy":"149"},{"ruleId":"144","replacedBy":"150"},{"ruleId":"146","replacedBy":"151"},{"ruleId":"144","replacedBy":"152"},{"ruleId":"146","replacedBy":"153"},{"ruleId":"144","replacedBy":"154"},{"ruleId":"146","replacedBy":"155"},{"ruleId":"144","replacedBy":"156"},{"ruleId":"146","replacedBy":"157"},{"ruleId":"144","replacedBy":"158"},{"ruleId":"146","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":14,"column":25,"nodeType":"162","messageId":"163","endLine":14,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":38,"column":25,"nodeType":"162","messageId":"163","endLine":38,"endColumn":27},{"ruleId":"164","severity":1,"message":"165","line":67,"column":3,"nodeType":"166","endLine":67,"endColumn":24,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":96,"column":7,"nodeType":"166","endLine":96,"endColumn":26,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":44,"column":22,"nodeType":"172","messageId":"173","endLine":44,"endColumn":23,"suggestions":"174"},{"ruleId":"170","severity":1,"message":"175","line":44,"column":24,"nodeType":"172","messageId":"173","endLine":44,"endColumn":25,"suggestions":"176"},{"ruleId":"170","severity":1,"message":"171","line":44,"column":37,"nodeType":"172","messageId":"173","endLine":44,"endColumn":38,"suggestions":"177"},{"ruleId":"170","severity":1,"message":"175","line":44,"column":39,"nodeType":"172","messageId":"173","endLine":44,"endColumn":40,"suggestions":"178"},{"ruleId":"144","replacedBy":"179"},{"ruleId":"146","replacedBy":"180"},{"ruleId":"170","severity":1,"message":"171","line":27,"column":22,"nodeType":"172","messageId":"173","endLine":27,"endColumn":23,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"175","line":27,"column":24,"nodeType":"172","messageId":"173","endLine":27,"endColumn":25,"suggestions":"182"},{"ruleId":"170","severity":1,"message":"171","line":27,"column":37,"nodeType":"172","messageId":"173","endLine":27,"endColumn":38,"suggestions":"183"},{"ruleId":"170","severity":1,"message":"175","line":27,"column":39,"nodeType":"172","messageId":"173","endLine":27,"endColumn":40,"suggestions":"184"},{"ruleId":"144","replacedBy":"185"},{"ruleId":"146","replacedBy":"186"},{"ruleId":"160","severity":1,"message":"187","line":24,"column":29,"nodeType":"162","messageId":"188","endLine":24,"endColumn":31},{"ruleId":"164","severity":1,"message":"189","line":86,"column":5,"nodeType":"166","endLine":86,"endColumn":16,"suggestions":"190"},{"ruleId":"160","severity":1,"message":"191","line":29,"column":56,"nodeType":"162","messageId":"188","endLine":29,"endColumn":58},{"ruleId":"164","severity":1,"message":"192","line":44,"column":5,"nodeType":"166","endLine":44,"endColumn":19,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],["194"],["195"],["194"],["195"],["194"],["195"],["194"],["195"],["194"],["195"],["194"],["195"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCount'. Either include it or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has missing dependencies: 'diaries.length', 'dispatch', 'props.history', and 'user'. Either include them or remove the dependency array.",["197"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["198","199"],"Unnecessary escape character: \\..",["200","201"],["202","203"],["204","205"],["194"],["195"],["206","207"],["208","209"],["210","211"],["212","213"],["194"],["195"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'date' and 'findDiaryData'. Either include them or remove the dependency array.",["214"],"Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'dispatch', 'isAuth', and 'props.history'. Either include them or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"messageId":"220","fix":"221","desc":"222"},{"messageId":"223","fix":"224","desc":"225"},{"messageId":"220","fix":"226","desc":"222"},{"messageId":"223","fix":"227","desc":"225"},{"messageId":"220","fix":"228","desc":"222"},{"messageId":"223","fix":"229","desc":"225"},{"messageId":"220","fix":"230","desc":"222"},{"messageId":"223","fix":"231","desc":"225"},{"messageId":"220","fix":"232","desc":"222"},{"messageId":"223","fix":"233","desc":"225"},{"messageId":"220","fix":"234","desc":"222"},{"messageId":"223","fix":"235","desc":"225"},{"messageId":"220","fix":"236","desc":"222"},{"messageId":"223","fix":"237","desc":"225"},{"messageId":"220","fix":"238","desc":"222"},{"messageId":"223","fix":"239","desc":"225"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [date, mode, diaries, getCount]",{"range":"244","text":"245"},"Update the dependencies array to be: [diaries.length, dispatch, isAuth, isUpdated, props.history, user]",{"range":"246","text":"247"},"removeEscape",{"range":"248","text":"249"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"250","text":"251"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"252","text":"249"},{"range":"253","text":"251"},{"range":"254","text":"249"},{"range":"255","text":"251"},{"range":"256","text":"249"},{"range":"257","text":"251"},{"range":"258","text":"249"},{"range":"259","text":"251"},{"range":"260","text":"249"},{"range":"261","text":"251"},{"range":"262","text":"249"},{"range":"263","text":"251"},{"range":"264","text":"249"},{"range":"265","text":"251"},"Update the dependencies array to be: [date, findDiaryData, openModal]",{"range":"266","text":"267"},"Update the dependencies array to be: [colors, dispatch, isAuth, props.history, user]",{"range":"268","text":"269"},[1620,1641],"[date, mode, diaries, getCount]",[3466,3485],"[diaries.length, dispatch, isAuth, isUpdated, props.history, user]",[1479,1480],"",[1479,1479],"\\",[1481,1482],[1481,1481],[1494,1495],[1494,1494],[1496,1497],[1496,1496],[928,929],[928,928],[930,931],[930,930],[943,944],[943,943],[945,946],[945,945],[2179,2190],"[date, findDiaryData, openModal]",[1390,1404],"[colors, dispatch, isAuth, props.history, user]"]