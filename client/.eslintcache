[{"C:\\react\\mood\\client\\src\\index.js":"1","C:\\react\\mood\\client\\src\\App.js":"2","C:\\react\\mood\\client\\src\\saga\\index.js":"3","C:\\react\\mood\\client\\src\\store.js":"4","C:\\react\\mood\\client\\src\\reducers\\index.js":"5","C:\\react\\mood\\client\\src\\reportWebVitals.js":"6","C:\\react\\mood\\client\\src\\components\\Nav\\index.js":"7","C:\\react\\mood\\client\\src\\components\\Chart\\index.js":"8","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js":"9","C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js":"10","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js":"11","C:\\react\\mood\\client\\src\\actions\\userAction.js":"12","C:\\react\\mood\\client\\src\\saga\\userSage.js":"13","C:\\react\\mood\\client\\src\\reducers\\userReducer.js":"14","C:\\react\\mood\\client\\src\\actions\\types.js":"15","C:\\react\\mood\\client\\src\\components\\Modal\\index.js":"16","C:\\react\\mood\\client\\src\\saga\\diarySaga.js":"17","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js":"18","C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js":"19","C:\\react\\mood\\client\\src\\saga\\globalSaga.js":"20","C:\\react\\mood\\client\\src\\actions\\globalAction.js":"21","C:\\react\\mood\\client\\src\\reducers\\globalReducer.js":"22","C:\\react\\mood\\client\\src\\components\\BG.js":"23","C:\\react\\mood\\client\\src\\actions\\diaryAction.js":"24"},{"size":568,"mtime":1607217815628,"results":"25","hashOfConfig":"26"},{"size":798,"mtime":1607218897431,"results":"27","hashOfConfig":"26"},{"size":212,"mtime":1607045407240,"results":"28","hashOfConfig":"26"},{"size":456,"mtime":1606562221579,"results":"29","hashOfConfig":"26"},{"size":234,"mtime":1607048971534,"results":"30","hashOfConfig":"26"},{"size":362,"mtime":1606480407518,"results":"31","hashOfConfig":"26"},{"size":1405,"mtime":1607144987576,"results":"32","hashOfConfig":"26"},{"size":3301,"mtime":1607227695400,"results":"33","hashOfConfig":"26"},{"size":3997,"mtime":1607313431052,"results":"34","hashOfConfig":"26"},{"size":5232,"mtime":1606999566982,"results":"35","hashOfConfig":"26"},{"size":3107,"mtime":1607055703669,"results":"36","hashOfConfig":"26"},{"size":612,"mtime":1607152587252,"results":"37","hashOfConfig":"26"},{"size":3304,"mtime":1607147174095,"results":"38","hashOfConfig":"26"},{"size":1543,"mtime":1607244895739,"results":"39","hashOfConfig":"26"},{"size":1653,"mtime":1607215659995,"results":"40","hashOfConfig":"26"},{"size":4046,"mtime":1607150451475,"results":"41","hashOfConfig":"26"},{"size":2195,"mtime":1607150916886,"results":"42","hashOfConfig":"26"},{"size":1133,"mtime":1607151101957,"results":"43","hashOfConfig":"26"},{"size":3729,"mtime":1607225838948,"results":"44","hashOfConfig":"26"},{"size":621,"mtime":1607219844942,"results":"45","hashOfConfig":"26"},{"size":124,"mtime":1607216020435,"results":"46","hashOfConfig":"26"},{"size":478,"mtime":1607217034406,"results":"47","hashOfConfig":"26"},{"size":390,"mtime":1607226082320,"results":"48","hashOfConfig":"26"},{"size":565,"mtime":1606617450896,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1g9e3iv",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\mood\\client\\src\\index.js",[],["115","116"],"C:\\react\\mood\\client\\src\\App.js",[],["117","118"],"C:\\react\\mood\\client\\src\\saga\\index.js",[],["119","120"],"C:\\react\\mood\\client\\src\\store.js",[],["121","122"],"C:\\react\\mood\\client\\src\\reducers\\index.js",[],["123","124"],"C:\\react\\mood\\client\\src\\reportWebVitals.js",[],["125","126"],"C:\\react\\mood\\client\\src\\components\\Nav\\index.js",[],["127","128"],"C:\\react\\mood\\client\\src\\components\\Chart\\index.js",["129","130","131"],"C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js",["132"],"C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js",["133","134","135","136"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {newUser} from '../../actions/userAction';\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst RegisterPage = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const registerResult = useSelector((state)=>state.userReducer.register);\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [nameCss, setNameCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n    const [confirmPwCss, setConfirmPwCss] = useState('');\r\n\r\n\r\n    console.log(registerResult);\r\n\r\n        const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        if (name === '') {\r\n            setNameCss('warning');\r\n            setTimeout(() => setNameCss(''), 1500);\r\n        }\r\n        if (confirmPassword === '') {\r\n            setConfirmPwCss('warning');\r\n            setTimeout(() => setConfirmPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '' &&\r\n                name !== '' &&\r\n                confirmPassword !== ''\r\n        ) {\r\n            dispatch(newUser({\r\n                    email,\r\n                    password,\r\n                    name\r\n            }))\r\n        }\r\n    };\r\n\r\n    const handlePw = (e) => {\r\n        if (e.currentTarget.value !== password) {\r\n            setConfirmPwCss('warning');\r\n        } else {\r\n            setConfirmPassword(e.currentTarget.value);\r\n            setConfirmPwCss('');\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(registerResult){\r\n            props.history.push('/login');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <h1>REGISTER</h1>\r\n            <section className=\"register-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setName(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"name\" className={nameCss}>\r\n                            NAME\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirm-pw\"\r\n                            id=\"confirm-pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={handlePw}\r\n                        />\r\n                        <label htmlFor=\"confirm-pw\" className={confirmPwCss}>\r\n                            CONFIRM PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            REGISTER\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/login\">Login 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js",["137","138","139","140"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { login } from '../../actions/userAction';\r\nimport './styles.scss';\r\n\r\nconst LoginPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n\r\n    const isAuth = useSelector((state)=>state.userReducer.isAuth);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '') {\r\n            dispatch(login({email, password}));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            props.history.push('/');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>LOG IN</h1>\r\n            <section className=\"login-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            LOGIN\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/register\">register 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n",["141","142"],"C:\\react\\mood\\client\\src\\actions\\userAction.js",[],"C:\\react\\mood\\client\\src\\saga\\userSage.js",["143"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ME_REQUEST, \r\n    ME_SUCCESS, \r\n    ME_FAILURE, \r\n    EDIT_ME_REQUEST, \r\n    EDIT_ME_SUCCESS,\r\n    EDIT_ME_FAILURE, \r\n    NEW_ME_REQUEST, \r\n    NEW_ME_SUCCESS, \r\n    NEW_ME_FAILURE,\r\n    LOGIN_REQUEST, \r\n    LOGIN_SUCCESS, \r\n    LOGIN_FAILURE,\r\n    LOGOUT_SUCCESS, \r\n    LOGOUT_FAILURE,\r\n    LOGOUT_REQUEST} from '../actions/types';\r\n\r\nfunction* postLogin({payload}){\r\n    const result = yield axios.post(\"/api/user/login\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield put({type:LOGIN_SUCCESS, data});\r\n            console.log( data +\"여기 있음!!!\")\r\n            localStorage.setItem('user_token', data.user.token);\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:LOGIN_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postNewMe({payload}){\r\n    const result = yield axios.post(\"/api/user\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status } = result;\r\n        if(status === 201){\r\n            yield put({type:NEW_ME_SUCCESS});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:NEW_ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* getMe(){\r\n    const result = yield axios.get(\"/api/user\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data} = result;\r\n        if(status === 200){\r\n            yield put({type:ME_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postEditMe({payload}){\r\n    const result = yield axios.patch(\"/api/user\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            console.log(data);\r\n            yield put({type:EDIT_ME_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:EDIT_ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* deleteMe(){\r\n    const result = yield axios.delete(\"/api/user\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status } = result;\r\n        if(status === 200){\r\n            yield alert(result.data.message);\r\n            yield localStorage.removeItem('user_token');\r\n            yield put({type:LOGOUT_SUCCESS});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:LOGOUT_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* watchUser(){\r\n    yield takeEvery(NEW_ME_REQUEST, postNewMe);\r\n    yield takeEvery(LOGIN_REQUEST, postLogin);\r\n    yield takeEvery(ME_REQUEST, getMe);\r\n    yield takeEvery(EDIT_ME_REQUEST, postEditMe);\r\n    yield takeLatest(LOGOUT_REQUEST, deleteMe);\r\n}\r\n\r\nexport default function* userSaga () {\r\n    yield all([fork(watchUser)])\r\n}",["144","145"],"C:\\react\\mood\\client\\src\\reducers\\userReducer.js",[],"C:\\react\\mood\\client\\src\\actions\\types.js",[],"C:\\react\\mood\\client\\src\\components\\Modal\\index.js",["146","147"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from 'antd';\r\nimport { newDiary, editDiary } from '../../actions/diaryAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst ModalPage = ({ date, openModal }) => {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = useState(openModal);\r\n  const [mood, setMood] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [isEditDiary, setIsEditDiary] = useState(false); // true면 글을 수정하는것, false면 글을 처음쓰는것\r\n  const [diaryId, setDiaryId] = useState('');\r\n  const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n\r\n  const findDiaryData = () =>{\r\n    console.log(diaries);\r\n    console.log('이거좀실행되라ㅡㅡ')\r\n    const splitedDate = date.split('-');\r\n    \r\n    let dayInfo = [];\r\n    dayInfo = diaries &&\r\n      diaries.filter((item) => {\r\n        if (item.post_year === Number(splitedDate[0]) && item.post_month === Number(splitedDate[1]) && item.post_day === Number(splitedDate[2])) {\r\n          return true;\r\n        }\r\n      });\r\n    if(dayInfo !== null){\r\n      if(dayInfo.length > 0){\r\n        setIsEditDiary(true);\r\n        setMood(dayInfo[0].mood);\r\n        setContent(dayInfo[0].content);\r\n        setDiaryId(dayInfo[0]._id);\r\n      }else{\r\n        setIsEditDiary(false);\r\n        setMood(\"\");\r\n        setContent(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOk = (e) => {\r\n    e.preventDefault();\r\n    if (mood === '') {\r\n      alert('mood를 선택해 주세요');\r\n      return;\r\n    }\r\n    if (content === '') {\r\n      alert('일기를 작성해 주세요');\r\n      return;\r\n    }\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n\r\n    if (isEditDiary) {\r\n        dispatch(editDiary({\r\n          diaryId,\r\n          mood,\r\n          content\r\n        })\r\n      )\r\n    } else {\r\n        dispatch(newDiary({\r\n            date,\r\n            mood,\r\n            content\r\n          })\r\n        )\r\n      }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(date);\r\n    if (openModal) {\r\n      setVisible(true);\r\n      findDiaryData();\r\n    }\r\n  },[openModal]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={date}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width='600px'\r\n        wrapClassName='modal-container'\r\n      >\r\n        <form className='form-diary'>\r\n          <ul className='mood'>\r\n            <li\r\n              value='1'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"1\" ? 'listClicked' : ''}\r\n              title=\"sooooooooo happy\"\r\n            >\r\n              😁\r\n            </li>\r\n            <li\r\n              value='2'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"2\" ? 'listClicked' : ''}\r\n              title=\"happy\"\r\n            >\r\n              🌝\r\n            </li>\r\n            <li\r\n              value='3'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"3\" ? 'listClicked' : ''}\r\n              title=\"normal\"\r\n            >\r\n              😐\r\n            </li>\r\n            <li\r\n              value='4'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"4\" ? 'listClicked' : ''}\r\n              title=\"sad\"\r\n            >\r\n              😭\r\n            </li>\r\n            <li\r\n              value='5'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"5\" ? 'listClicked' : ''}\r\n              title=\"upset\"\r\n            >\r\n              😡\r\n            </li>\r\n          </ul>\r\n          <textarea\r\n            onChange={(e) => setContent(e.currentTarget.value)}\r\n            value={content}\r\n          ></textarea>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalPage;\r\n","C:\\react\\mood\\client\\src\\saga\\diarySaga.js",["148","149","150","151","152","153","154","155"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    DIARY_REQUEST,\r\n    DIARY_SUCCESS,\r\n    DIARY_FAILURE,\r\n    EDIT_DIARY_REQUEST,\r\n    EDIT_DIARY_SUCCESS,\r\n    EDIT_DIARY_FAILURE,\r\n    NEW_DIARY_REQUEST,\r\n    NEW_DIARY_SUCCESS,\r\n    NEW_DIARY_FAILURE,\r\n    DELETE_DIARY_REQUEST,\r\n    DELETE_DIARY_SUCCESS,\r\n    DELETE_DIARY_FAILURE,\r\n    COUNT_REQUEST,\r\n    COUNT_SUCCESS,\r\n    COUNT_FAILURE\r\n} from '../actions/types';\r\n\r\nfunction* getDiary({payload}){\r\n    const result = yield axios.get(\"/api/diary\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield put({type:DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postDiary({payload}){\r\n    const result = yield axios.post(\"/api/diary\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 201){\r\n            yield put({type:NEW_DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:NEW_DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* patchDiary({payload}){\r\n    const result = yield axios.patch(\"/api/diary\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield alert(result.data.message);\r\n            yield put({type:EDIT_DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:EDIT_DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* watchDiary(){\r\n    yield takeEvery(DIARY_REQUEST, getDiary);\r\n    yield takeEvery(NEW_DIARY_REQUEST, postDiary);\r\n    yield takeEvery(EDIT_DIARY_REQUEST, patchDiary);\r\n}\r\n\r\nexport default function* diarySaga () {\r\n    yield all([fork(watchDiary)])\r\n}",["156","157"],"C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js",["158","159","160"],"C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js",["161"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMe, editMe} from '../../actions/userAction';\r\nimport {changeBG} from '../../actions/globalAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst SettingPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const colors = useSelector((state) => state.globalReducer.colors);\r\n  const isAuth = useSelector(state=>state.userReducer.isAuth);\r\n\r\n  const [name, setName] = useState(user.name);\r\n  const [selfPromise, setSelfPromise] = useState(user.selfPromise);\r\n  const [leftColor, setLeftColor] = useState(colors[0]);\r\n  const [midColor, setMidColor] = useState(colors[1]);\r\n  const [rightColor, setRightColor] = useState(colors[2]);\r\n  const handleProfile = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editMe({\r\n      name,\r\n      selfPromise\r\n    }))\r\n\r\n  };\r\n\r\n  const handleBG = (e) =>{\r\n    e.preventDefault();\r\n    dispatch(changeBG([leftColor, midColor, rightColor]));\r\n  }\r\n\r\n  useEffect(()=>{\r\n         if(isAuth === null){\r\n            props.history.push('/login');\r\n        }else{\r\n            if(Object.keys(user).length === 0){\r\n                dispatch(getMe())\r\n            }else{\r\n              setName(user.name);\r\n              setSelfPromise(user.selfPromise)\r\n            }\r\n        }\r\n  },[colors, user])\r\n\r\n  return (\r\n    <div className='setting-container'>\r\n        <div className=\"profile-box box\">\r\n            <h2 className='page-title'>PROFILE</h2>\r\n            <hr />\r\n              <form className='info-form' onSubmit={handleProfile}>\r\n                <p className='title'>E-MAIL</p>\r\n                <p className='email' name='email'>\r\n                  {user.email}\r\n                </p>\r\n                <p className='title'>NICK NAME</p>\r\n                <input\r\n                  type='text'\r\n                  name='nickname'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <p className='title'>SELF PROMISE</p>\r\n                <input\r\n                  type='text'\r\n                  name='goal'\r\n                  value={selfPromise}\r\n                  onChange={(e) => setSelfPromise(e.target.value)}\r\n                />\r\n                <button className='edit-btn' type='submit'>\r\n                  EDIT\r\n                </button>\r\n              </form>\r\n        </div>\r\n        <div className=\"bg-box box\">\r\n            <h2 className='page-title'>BG COLOR</h2>\r\n            <hr />\r\n            <div className=\"color-pick-box\">\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"left\">LEFT</label>\r\n                <input type=\"color\" id=\"left\" name=\"left\" value={leftColor} onChange={(e)=>setLeftColor(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"mid\">MIDDLE</label>\r\n                <input type=\"color\" id=\"mid\" name=\"mid\" value={midColor} onChange={(e)=>setMidColor(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"color-pick\">\r\n                <label htmlFor=\"right\">RIGHT</label>\r\n                <input type=\"color\" id=\"right\" name=\"right\" value={rightColor} onChange={(e)=>setRightColor(e.currentTarget.value)}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"display-box\" style={{\"background\":`linear-gradient(0.25turn,${leftColor}, ${midColor}, ${rightColor})`}}></div>\r\n            <button className='bg-btn' onClick={handleBG}>\r\n                  적용하기\r\n            </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingPage;\r\n","C:\\react\\mood\\client\\src\\saga\\globalSaga.js",["162","163","164"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { BG_REQUEST, BG_SUCCESS, BG_FAILURE} from '../actions/types';\r\n\r\n\r\nfunction* changeBG({payload}){\r\n    try{\r\n        yield put({type:BG_SUCCESS, data:payload});\r\n        yield alert('배경색 변경 성공!');\r\n    }catch(error){\r\n        yield alert('배경색 변경에 실패했습니다.');\r\n        yield put({type:BG_FAILURE});\r\n    }\r\n}\r\n\r\n\r\nfunction* watchGlobal(){\r\n    yield takeEvery(BG_REQUEST, changeBG);\r\n}\r\n\r\nexport default function* globalSaga () {\r\n    yield all([fork(watchGlobal)])\r\n}","C:\\react\\mood\\client\\src\\actions\\globalAction.js",[],"C:\\react\\mood\\client\\src\\reducers\\globalReducer.js",[],"C:\\react\\mood\\client\\src\\components\\BG.js",[],"C:\\react\\mood\\client\\src\\actions\\diaryAction.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"165","replacedBy":"169"},{"ruleId":"167","replacedBy":"170"},{"ruleId":"165","replacedBy":"171"},{"ruleId":"167","replacedBy":"172"},{"ruleId":"165","replacedBy":"173"},{"ruleId":"167","replacedBy":"174"},{"ruleId":"165","replacedBy":"175"},{"ruleId":"167","replacedBy":"176"},{"ruleId":"165","replacedBy":"177"},{"ruleId":"167","replacedBy":"178"},{"ruleId":"165","replacedBy":"179"},{"ruleId":"167","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":15,"column":25,"nodeType":"183","messageId":"184","endLine":15,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":39,"column":25,"nodeType":"183","messageId":"184","endLine":39,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":73,"column":5,"nodeType":"187","endLine":73,"endColumn":26,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"189","line":92,"column":7,"nodeType":"187","endLine":92,"endColumn":15,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":44,"column":22,"nodeType":"193","messageId":"194","endLine":44,"endColumn":23,"suggestions":"195"},{"ruleId":"191","severity":1,"message":"196","line":44,"column":24,"nodeType":"193","messageId":"194","endLine":44,"endColumn":25,"suggestions":"197"},{"ruleId":"191","severity":1,"message":"192","line":44,"column":37,"nodeType":"193","messageId":"194","endLine":44,"endColumn":38,"suggestions":"198"},{"ruleId":"191","severity":1,"message":"196","line":44,"column":39,"nodeType":"193","messageId":"194","endLine":44,"endColumn":40,"suggestions":"199"},{"ruleId":"191","severity":1,"message":"192","line":27,"column":22,"nodeType":"193","messageId":"194","endLine":27,"endColumn":23,"suggestions":"200"},{"ruleId":"191","severity":1,"message":"196","line":27,"column":24,"nodeType":"193","messageId":"194","endLine":27,"endColumn":25,"suggestions":"201"},{"ruleId":"191","severity":1,"message":"192","line":27,"column":37,"nodeType":"193","messageId":"194","endLine":27,"endColumn":38,"suggestions":"202"},{"ruleId":"191","severity":1,"message":"196","line":27,"column":39,"nodeType":"193","messageId":"194","endLine":27,"endColumn":40,"suggestions":"203"},{"ruleId":"165","replacedBy":"204"},{"ruleId":"167","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":48,"nodeType":"208","messageId":"209","endLine":1,"endColumn":52},{"ruleId":"165","replacedBy":"210"},{"ruleId":"167","replacedBy":"211"},{"ruleId":"181","severity":1,"message":"212","line":24,"column":29,"nodeType":"183","messageId":"213","endLine":24,"endColumn":31},{"ruleId":"185","severity":1,"message":"214","line":86,"column":5,"nodeType":"187","endLine":86,"endColumn":16,"suggestions":"215"},{"ruleId":"206","severity":1,"message":"216","line":1,"column":31,"nodeType":"208","messageId":"209","endLine":1,"endColumn":41},{"ruleId":"206","severity":1,"message":"207","line":1,"column":48,"nodeType":"208","messageId":"209","endLine":1,"endColumn":52},{"ruleId":"206","severity":1,"message":"217","line":13,"column":5,"nodeType":"208","messageId":"209","endLine":13,"endColumn":25},{"ruleId":"206","severity":1,"message":"218","line":14,"column":5,"nodeType":"208","messageId":"209","endLine":14,"endColumn":25},{"ruleId":"206","severity":1,"message":"219","line":15,"column":5,"nodeType":"208","messageId":"209","endLine":15,"endColumn":25},{"ruleId":"206","severity":1,"message":"220","line":16,"column":5,"nodeType":"208","messageId":"209","endLine":16,"endColumn":18},{"ruleId":"206","severity":1,"message":"221","line":17,"column":5,"nodeType":"208","messageId":"209","endLine":17,"endColumn":18},{"ruleId":"206","severity":1,"message":"222","line":18,"column":5,"nodeType":"208","messageId":"209","endLine":18,"endColumn":18},{"ruleId":"165","replacedBy":"223"},{"ruleId":"167","replacedBy":"224"},{"ruleId":"206","severity":1,"message":"218","line":8,"column":5,"nodeType":"208","messageId":"209","endLine":8,"endColumn":25},{"ruleId":"206","severity":1,"message":"219","line":9,"column":5,"nodeType":"208","messageId":"209","endLine":9,"endColumn":25},{"ruleId":"181","severity":1,"message":"225","line":29,"column":63,"nodeType":"183","messageId":"213","endLine":29,"endColumn":65},{"ruleId":"185","severity":1,"message":"226","line":44,"column":5,"nodeType":"187","endLine":44,"endColumn":19,"suggestions":"227"},{"ruleId":"206","severity":1,"message":"216","line":1,"column":31,"nodeType":"208","messageId":"209","endLine":1,"endColumn":41},{"ruleId":"206","severity":1,"message":"207","line":1,"column":48,"nodeType":"208","messageId":"209","endLine":1,"endColumn":52},{"ruleId":"206","severity":1,"message":"228","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":13},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],["229"],["230"],["229"],["230"],["229"],["230"],["229"],["230"],["229"],["230"],["229"],["230"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCount' and 'prevDiaryLength'. Either include them or remove the dependency array.","ArrayExpression",["231"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'user'. Either include them or remove the dependency array.",["232"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["233","234"],"Unnecessary escape character: \\..",["235","236"],["237","238"],["239","240"],["241","242"],["243","244"],["245","246"],["247","248"],["229"],["230"],"no-unused-vars","'call' is defined but never used.","Identifier","unusedVar",["229"],["230"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'date' and 'findDiaryData'. Either include them or remove the dependency array.",["249"],"'takeLatest' is defined but never used.","'DELETE_DIARY_REQUEST' is defined but never used.","'DELETE_DIARY_SUCCESS' is defined but never used.","'DELETE_DIARY_FAILURE' is defined but never used.","'COUNT_REQUEST' is defined but never used.","'COUNT_SUCCESS' is defined but never used.","'COUNT_FAILURE' is defined but never used.",["229"],["230"],"Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'dispatch', 'isAuth', and 'props.history'. Either include them or remove the dependency array.",["250"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"messageId":"255","fix":"256","desc":"257"},{"messageId":"258","fix":"259","desc":"260"},{"messageId":"255","fix":"261","desc":"257"},{"messageId":"258","fix":"262","desc":"260"},{"messageId":"255","fix":"263","desc":"257"},{"messageId":"258","fix":"264","desc":"260"},{"messageId":"255","fix":"265","desc":"257"},{"messageId":"258","fix":"266","desc":"260"},{"messageId":"255","fix":"267","desc":"257"},{"messageId":"258","fix":"268","desc":"260"},{"messageId":"255","fix":"269","desc":"257"},{"messageId":"258","fix":"270","desc":"260"},{"messageId":"255","fix":"271","desc":"257"},{"messageId":"258","fix":"272","desc":"260"},{"messageId":"255","fix":"273","desc":"257"},{"messageId":"258","fix":"274","desc":"260"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [date, mode, diaries, prevDiaryLength, getCount]",{"range":"279","text":"280"},"Update the dependencies array to be: [dispatch, isAuth, props.history, user]",{"range":"281","text":"282"},"removeEscape",{"range":"283","text":"284"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"285","text":"286"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"287","text":"284"},{"range":"288","text":"286"},{"range":"289","text":"284"},{"range":"290","text":"286"},{"range":"291","text":"284"},{"range":"292","text":"286"},{"range":"293","text":"284"},{"range":"294","text":"286"},{"range":"295","text":"284"},{"range":"296","text":"286"},{"range":"297","text":"284"},{"range":"298","text":"286"},{"range":"299","text":"284"},{"range":"300","text":"286"},"Update the dependencies array to be: [date, findDiaryData, openModal]",{"range":"301","text":"302"},"Update the dependencies array to be: [colors, dispatch, isAuth, props.history, user]",{"range":"303","text":"304"},[1885,1906],"[date, mode, diaries, prevDiaryLength, getCount]",[3285,3293],"[dispatch, isAuth, props.history, user]",[1479,1480],"",[1479,1479],"\\",[1481,1482],[1481,1481],[1494,1495],[1494,1494],[1496,1497],[1496,1496],[928,929],[928,928],[930,931],[930,930],[943,944],[943,943],[945,946],[945,945],[2179,2190],"[date, findDiaryData, openModal]",[1390,1404],"[colors, dispatch, isAuth, props.history, user]"]