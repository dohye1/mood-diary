[{"C:\\react\\mood\\client\\src\\index.js":"1","C:\\react\\mood\\client\\src\\App.js":"2","C:\\react\\mood\\client\\src\\saga\\index.js":"3","C:\\react\\mood\\client\\src\\store.js":"4","C:\\react\\mood\\client\\src\\reducers\\index.js":"5","C:\\react\\mood\\client\\src\\reportWebVitals.js":"6","C:\\react\\mood\\client\\src\\components\\Nav\\index.js":"7","C:\\react\\mood\\client\\src\\components\\Chart\\index.js":"8","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js":"9","C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js":"10","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js":"11","C:\\react\\mood\\client\\src\\actions\\userAction.js":"12","C:\\react\\mood\\client\\src\\saga\\userSage.js":"13","C:\\react\\mood\\client\\src\\reducers\\userReducer.js":"14","C:\\react\\mood\\client\\src\\actions\\types.js":"15","C:\\react\\mood\\client\\src\\components\\Modal\\index.js":"16","C:\\react\\mood\\client\\src\\saga\\diarySaga.js":"17","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js":"18","C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js":"19","C:\\react\\mood\\client\\src\\saga\\globalSaga.js":"20","C:\\react\\mood\\client\\src\\actions\\globalAction.js":"21","C:\\react\\mood\\client\\src\\reducers\\globalReducer.js":"22","C:\\react\\mood\\client\\src\\components\\BG.js":"23"},{"size":568,"mtime":1607217815628,"results":"24","hashOfConfig":"25"},{"size":798,"mtime":1607218897431,"results":"26","hashOfConfig":"25"},{"size":212,"mtime":1607045407240,"results":"27","hashOfConfig":"25"},{"size":456,"mtime":1606562221579,"results":"28","hashOfConfig":"25"},{"size":234,"mtime":1607048971534,"results":"29","hashOfConfig":"25"},{"size":362,"mtime":1606480407518,"results":"30","hashOfConfig":"25"},{"size":1405,"mtime":1607144987576,"results":"31","hashOfConfig":"25"},{"size":3413,"mtime":1607144795986,"results":"32","hashOfConfig":"25"},{"size":3921,"mtime":1607148007166,"results":"33","hashOfConfig":"25"},{"size":5232,"mtime":1606999566982,"results":"34","hashOfConfig":"25"},{"size":3107,"mtime":1607055703669,"results":"35","hashOfConfig":"25"},{"size":612,"mtime":1607152587252,"results":"36","hashOfConfig":"25"},{"size":3304,"mtime":1607147174095,"results":"37","hashOfConfig":"25"},{"size":1456,"mtime":1607147286744,"results":"38","hashOfConfig":"25"},{"size":1653,"mtime":1607215659995,"results":"39","hashOfConfig":"25"},{"size":4046,"mtime":1607150451475,"results":"40","hashOfConfig":"25"},{"size":2195,"mtime":1607150916886,"results":"41","hashOfConfig":"25"},{"size":1133,"mtime":1607151101957,"results":"42","hashOfConfig":"25"},{"size":3348,"mtime":1607217386474,"results":"43","hashOfConfig":"25"},{"size":621,"mtime":1607219844942,"results":"44","hashOfConfig":"25"},{"size":124,"mtime":1607216020435,"results":"45","hashOfConfig":"25"},{"size":478,"mtime":1607217034406,"results":"46","hashOfConfig":"25"},{"size":392,"mtime":1607218884327,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g9e3iv",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\mood\\client\\src\\index.js",[],"C:\\react\\mood\\client\\src\\App.js",[],"C:\\react\\mood\\client\\src\\saga\\index.js",[],["106","107"],"C:\\react\\mood\\client\\src\\store.js",[],"C:\\react\\mood\\client\\src\\reducers\\index.js",[],["108","109"],"C:\\react\\mood\\client\\src\\reportWebVitals.js",[],["110","111"],"C:\\react\\mood\\client\\src\\components\\Nav\\index.js",[],"C:\\react\\mood\\client\\src\\components\\Chart\\index.js",["112","113","114"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Chart = ({date, mode}) =>{\r\n  const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n  const [count, setCount] = useState([0,0,0,0,0]);\r\n  const [prevDiaryLength, setPrevDiaryLength] = useState(diaries.length);\r\n  const getCount = () =>{\r\n    let one=0, two=0, three=0, four=0, five=0;\r\n    const splitDate = date.split(\"-\");\r\n    console.log(date);\r\n    console.log('여긴 함수안');\r\n    console.log(mode);\r\n    if(mode){\r\n      console.log('월단위로 통계냄');\r\n      diaries.map(diary => {\r\n        if(diary.post_year===Number(splitDate[0]) && diary.post_month===Number(splitDate[1])) {\r\n          switch(Number(diary.mood)){\r\n            case 1:\r\n              one++;\r\n              break;\r\n            case 2:\r\n              two++;\r\n              break;\r\n            case 3:\r\n              three++;\r\n              break;\r\n            case 4:\r\n              four++;\r\n              break;\r\n            case 5:\r\n              five++;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      }\r\n    }\r\n  )}else{\r\n      console.log('년단위로 통계냄');\r\n      diaries.map(diary => {\r\n        if(diary.post_year===Number(splitDate[0])) {\r\n          switch(Number(diary.mood)){\r\n            case 1:\r\n              one++;\r\n              break;\r\n            case 2:\r\n              two++;\r\n              break;\r\n            case 3:\r\n              three++;\r\n              break;\r\n            case 4:\r\n              four++;\r\n              break;\r\n            case 5:\r\n              five++;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      }\r\n    })\r\n  }\r\n  setCount([one, two, three, four, five]);\r\n};\r\n\r\n  useEffect(()=>{\r\n    console.log(\"chart여기가 실행됐어!!\");\r\n    if( prevDiaryLength !== diaries.length){\r\n      setPrevDiaryLength(diaries.length);\r\n    }\r\n    getCount();\r\n  },[date, mode]);\r\n\r\nconst state = {\r\n    labels: ['SOOOO HAPPY', 'HAPPY', 'SOSO', 'BAD', 'UPSET'],\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: count,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(153, 102, 255, 0.2)'\r\n        ],\r\n        hoverBackgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)'\r\n        ],\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n             <Pie\r\n                data={state}\r\n                width={250}\r\n                height={100}\r\n                options={{\r\n                  responsive: false,\r\n                  maintainAspectRatio: false,\r\n                  legend: {\r\n                    display: false,\r\n                    position: 'bottom'\r\n                  }\r\n                }}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js",["115"],"C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js",["116","117","118","119"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {newUser} from '../../actions/userAction';\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst RegisterPage = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const registerResult = useSelector((state)=>state.userReducer.register);\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [nameCss, setNameCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n    const [confirmPwCss, setConfirmPwCss] = useState('');\r\n\r\n\r\n    console.log(registerResult);\r\n\r\n        const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        if (name === '') {\r\n            setNameCss('warning');\r\n            setTimeout(() => setNameCss(''), 1500);\r\n        }\r\n        if (confirmPassword === '') {\r\n            setConfirmPwCss('warning');\r\n            setTimeout(() => setConfirmPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '' &&\r\n                name !== '' &&\r\n                confirmPassword !== ''\r\n        ) {\r\n            dispatch(newUser({\r\n                    email,\r\n                    password,\r\n                    name\r\n            }))\r\n        }\r\n    };\r\n\r\n    const handlePw = (e) => {\r\n        if (e.currentTarget.value !== password) {\r\n            setConfirmPwCss('warning');\r\n        } else {\r\n            setConfirmPassword(e.currentTarget.value);\r\n            setConfirmPwCss('');\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(registerResult){\r\n            props.history.push('/login');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <h1>REGISTER</h1>\r\n            <section className=\"register-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setName(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"name\" className={nameCss}>\r\n                            NAME\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirm-pw\"\r\n                            id=\"confirm-pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={handlePw}\r\n                        />\r\n                        <label htmlFor=\"confirm-pw\" className={confirmPwCss}>\r\n                            CONFIRM PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            REGISTER\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/login\">Login 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js",["120","121","122","123"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { login } from '../../actions/userAction';\r\nimport './styles.scss';\r\n\r\nconst LoginPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n\r\n    const isAuth = useSelector((state)=>state.userReducer.isAuth);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '') {\r\n            dispatch(login({email, password}));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            props.history.push('/');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>LOG IN</h1>\r\n            <section className=\"login-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            LOGIN\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/register\">register 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n",["124","125"],"C:\\react\\mood\\client\\src\\actions\\userAction.js",[],"C:\\react\\mood\\client\\src\\saga\\userSage.js",["126"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ME_REQUEST, \r\n    ME_SUCCESS, \r\n    ME_FAILURE, \r\n    EDIT_ME_REQUEST, \r\n    EDIT_ME_SUCCESS,\r\n    EDIT_ME_FAILURE, \r\n    NEW_ME_REQUEST, \r\n    NEW_ME_SUCCESS, \r\n    NEW_ME_FAILURE,\r\n    LOGIN_REQUEST, \r\n    LOGIN_SUCCESS, \r\n    LOGIN_FAILURE,\r\n    LOGOUT_SUCCESS, \r\n    LOGOUT_FAILURE,\r\n    LOGOUT_REQUEST} from '../actions/types';\r\n\r\nfunction* postLogin({payload}){\r\n    const result = yield axios.post(\"/api/user/login\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield put({type:LOGIN_SUCCESS, data});\r\n            console.log( data +\"여기 있음!!!\")\r\n            localStorage.setItem('user_token', data.user.token);\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:LOGIN_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postNewMe({payload}){\r\n    const result = yield axios.post(\"/api/user\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status } = result;\r\n        if(status === 201){\r\n            yield put({type:NEW_ME_SUCCESS});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:NEW_ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* getMe(){\r\n    const result = yield axios.get(\"/api/user\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data} = result;\r\n        if(status === 200){\r\n            yield put({type:ME_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postEditMe({payload}){\r\n    const result = yield axios.patch(\"/api/user\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            console.log(data);\r\n            yield put({type:EDIT_ME_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:EDIT_ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* deleteMe(){\r\n    const result = yield axios.delete(\"/api/user\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status } = result;\r\n        if(status === 200){\r\n            yield alert(result.data.message);\r\n            yield localStorage.removeItem('user_token');\r\n            yield put({type:LOGOUT_SUCCESS});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:LOGOUT_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* watchUser(){\r\n    yield takeEvery(NEW_ME_REQUEST, postNewMe);\r\n    yield takeEvery(LOGIN_REQUEST, postLogin);\r\n    yield takeEvery(ME_REQUEST, getMe);\r\n    yield takeEvery(EDIT_ME_REQUEST, postEditMe);\r\n    yield takeLatest(LOGOUT_REQUEST, deleteMe);\r\n}\r\n\r\nexport default function* userSaga () {\r\n    yield all([fork(watchUser)])\r\n}",["127","128"],"C:\\react\\mood\\client\\src\\reducers\\userReducer.js",[],"C:\\react\\mood\\client\\src\\actions\\types.js",[],"C:\\react\\mood\\client\\src\\components\\Modal\\index.js",["129","130"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from 'antd';\r\nimport { newDiary, editDiary } from '../../actions/diaryAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst ModalPage = ({ date, openModal }) => {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = useState(openModal);\r\n  const [mood, setMood] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [isEditDiary, setIsEditDiary] = useState(false); // true면 글을 수정하는것, false면 글을 처음쓰는것\r\n  const [diaryId, setDiaryId] = useState('');\r\n  const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n\r\n  const findDiaryData = () =>{\r\n    console.log(diaries);\r\n    console.log('이거좀실행되라ㅡㅡ')\r\n    const splitedDate = date.split('-');\r\n    \r\n    let dayInfo = [];\r\n    dayInfo = diaries &&\r\n      diaries.filter((item) => {\r\n        if (item.post_year === Number(splitedDate[0]) && item.post_month === Number(splitedDate[1]) && item.post_day === Number(splitedDate[2])) {\r\n          return true;\r\n        }\r\n      });\r\n    if(dayInfo !== null){\r\n      if(dayInfo.length > 0){\r\n        setIsEditDiary(true);\r\n        setMood(dayInfo[0].mood);\r\n        setContent(dayInfo[0].content);\r\n        setDiaryId(dayInfo[0]._id);\r\n      }else{\r\n        setIsEditDiary(false);\r\n        setMood(\"\");\r\n        setContent(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOk = (e) => {\r\n    e.preventDefault();\r\n    if (mood === '') {\r\n      alert('mood를 선택해 주세요');\r\n      return;\r\n    }\r\n    if (content === '') {\r\n      alert('일기를 작성해 주세요');\r\n      return;\r\n    }\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n\r\n    if (isEditDiary) {\r\n        dispatch(editDiary({\r\n          diaryId,\r\n          mood,\r\n          content\r\n        })\r\n      )\r\n    } else {\r\n        dispatch(newDiary({\r\n            date,\r\n            mood,\r\n            content\r\n          })\r\n        )\r\n      }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(date);\r\n    if (openModal) {\r\n      setVisible(true);\r\n      findDiaryData();\r\n    }\r\n  },[openModal]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={date}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width='600px'\r\n        wrapClassName='modal-container'\r\n      >\r\n        <form className='form-diary'>\r\n          <ul className='mood'>\r\n            <li\r\n              value='1'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"1\" ? 'listClicked' : ''}\r\n              title=\"sooooooooo happy\"\r\n            >\r\n              😁\r\n            </li>\r\n            <li\r\n              value='2'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"2\" ? 'listClicked' : ''}\r\n              title=\"happy\"\r\n            >\r\n              🌝\r\n            </li>\r\n            <li\r\n              value='3'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"3\" ? 'listClicked' : ''}\r\n              title=\"normal\"\r\n            >\r\n              😐\r\n            </li>\r\n            <li\r\n              value='4'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"4\" ? 'listClicked' : ''}\r\n              title=\"sad\"\r\n            >\r\n              😭\r\n            </li>\r\n            <li\r\n              value='5'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"5\" ? 'listClicked' : ''}\r\n              title=\"upset\"\r\n            >\r\n              😡\r\n            </li>\r\n          </ul>\r\n          <textarea\r\n            onChange={(e) => setContent(e.currentTarget.value)}\r\n            value={content}\r\n          ></textarea>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalPage;\r\n","C:\\react\\mood\\client\\src\\saga\\diarySaga.js",["131","132","133","134","135","136","137","138"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    DIARY_REQUEST,\r\n    DIARY_SUCCESS,\r\n    DIARY_FAILURE,\r\n    EDIT_DIARY_REQUEST,\r\n    EDIT_DIARY_SUCCESS,\r\n    EDIT_DIARY_FAILURE,\r\n    NEW_DIARY_REQUEST,\r\n    NEW_DIARY_SUCCESS,\r\n    NEW_DIARY_FAILURE,\r\n    DELETE_DIARY_REQUEST,\r\n    DELETE_DIARY_SUCCESS,\r\n    DELETE_DIARY_FAILURE,\r\n    COUNT_REQUEST,\r\n    COUNT_SUCCESS,\r\n    COUNT_FAILURE\r\n} from '../actions/types';\r\n\r\nfunction* getDiary({payload}){\r\n    const result = yield axios.get(\"/api/diary\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield put({type:DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postDiary({payload}){\r\n    const result = yield axios.post(\"/api/diary\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 201){\r\n            yield put({type:NEW_DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:NEW_DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* patchDiary({payload}){\r\n    const result = yield axios.patch(\"/api/diary\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield alert(result.data.message);\r\n            yield put({type:EDIT_DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:EDIT_DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* watchDiary(){\r\n    yield takeEvery(DIARY_REQUEST, getDiary);\r\n    yield takeEvery(NEW_DIARY_REQUEST, postDiary);\r\n    yield takeEvery(EDIT_DIARY_REQUEST, patchDiary);\r\n}\r\n\r\nexport default function* diarySaga () {\r\n    yield all([fork(watchDiary)])\r\n}",["139","140"],"C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js",["141","142","143"],"C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js",[],"C:\\react\\mood\\client\\src\\saga\\globalSaga.js",["144","145","146"],"C:\\react\\mood\\client\\src\\actions\\globalAction.js",[],"C:\\react\\mood\\client\\src\\reducers\\globalReducer.js",[],"C:\\react\\mood\\client\\src\\components\\BG.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"147","replacedBy":"151"},{"ruleId":"149","replacedBy":"152"},{"ruleId":"147","replacedBy":"153"},{"ruleId":"149","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":17,"column":25,"nodeType":"157","messageId":"158","endLine":17,"endColumn":27},{"ruleId":"155","severity":1,"message":"156","line":42,"column":25,"nodeType":"157","messageId":"158","endLine":42,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":75,"column":5,"nodeType":"161","endLine":75,"endColumn":17,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"163","line":92,"column":7,"nodeType":"161","endLine":92,"endColumn":15,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":44,"column":22,"nodeType":"167","messageId":"168","endLine":44,"endColumn":23,"suggestions":"169"},{"ruleId":"165","severity":1,"message":"170","line":44,"column":24,"nodeType":"167","messageId":"168","endLine":44,"endColumn":25,"suggestions":"171"},{"ruleId":"165","severity":1,"message":"166","line":44,"column":37,"nodeType":"167","messageId":"168","endLine":44,"endColumn":38,"suggestions":"172"},{"ruleId":"165","severity":1,"message":"170","line":44,"column":39,"nodeType":"167","messageId":"168","endLine":44,"endColumn":40,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"166","line":27,"column":22,"nodeType":"167","messageId":"168","endLine":27,"endColumn":23,"suggestions":"174"},{"ruleId":"165","severity":1,"message":"170","line":27,"column":24,"nodeType":"167","messageId":"168","endLine":27,"endColumn":25,"suggestions":"175"},{"ruleId":"165","severity":1,"message":"166","line":27,"column":37,"nodeType":"167","messageId":"168","endLine":27,"endColumn":38,"suggestions":"176"},{"ruleId":"165","severity":1,"message":"170","line":27,"column":39,"nodeType":"167","messageId":"168","endLine":27,"endColumn":40,"suggestions":"177"},{"ruleId":"147","replacedBy":"178"},{"ruleId":"149","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":48,"nodeType":"182","messageId":"183","endLine":1,"endColumn":52},{"ruleId":"147","replacedBy":"184"},{"ruleId":"149","replacedBy":"185"},{"ruleId":"155","severity":1,"message":"186","line":24,"column":29,"nodeType":"157","messageId":"187","endLine":24,"endColumn":31},{"ruleId":"159","severity":1,"message":"188","line":86,"column":5,"nodeType":"161","endLine":86,"endColumn":16,"suggestions":"189"},{"ruleId":"180","severity":1,"message":"190","line":1,"column":31,"nodeType":"182","messageId":"183","endLine":1,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":1,"column":48,"nodeType":"182","messageId":"183","endLine":1,"endColumn":52},{"ruleId":"180","severity":1,"message":"191","line":13,"column":5,"nodeType":"182","messageId":"183","endLine":13,"endColumn":25},{"ruleId":"180","severity":1,"message":"192","line":14,"column":5,"nodeType":"182","messageId":"183","endLine":14,"endColumn":25},{"ruleId":"180","severity":1,"message":"193","line":15,"column":5,"nodeType":"182","messageId":"183","endLine":15,"endColumn":25},{"ruleId":"180","severity":1,"message":"194","line":16,"column":5,"nodeType":"182","messageId":"183","endLine":16,"endColumn":18},{"ruleId":"180","severity":1,"message":"195","line":17,"column":5,"nodeType":"182","messageId":"183","endLine":17,"endColumn":18},{"ruleId":"180","severity":1,"message":"196","line":18,"column":5,"nodeType":"182","messageId":"183","endLine":18,"endColumn":18},{"ruleId":"147","replacedBy":"197"},{"ruleId":"149","replacedBy":"198"},{"ruleId":"180","severity":1,"message":"192","line":8,"column":5,"nodeType":"182","messageId":"183","endLine":8,"endColumn":25},{"ruleId":"180","severity":1,"message":"193","line":9,"column":5,"nodeType":"182","messageId":"183","endLine":9,"endColumn":25},{"ruleId":"155","severity":1,"message":"199","line":29,"column":63,"nodeType":"157","messageId":"187","endLine":29,"endColumn":65},{"ruleId":"180","severity":1,"message":"190","line":1,"column":31,"nodeType":"182","messageId":"183","endLine":1,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":1,"column":48,"nodeType":"182","messageId":"183","endLine":1,"endColumn":52},{"ruleId":"180","severity":1,"message":"200","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":13},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],["201"],["202"],["201"],["202"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'diaries.length', 'getCount', and 'prevDiaryLength'. Either include them or remove the dependency array.","ArrayExpression",["203"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'user'. Either include them or remove the dependency array.",["204"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["205","206"],"Unnecessary escape character: \\..",["207","208"],["209","210"],["211","212"],["213","214"],["215","216"],["217","218"],["219","220"],["201"],["202"],"no-unused-vars","'call' is defined but never used.","Identifier","unusedVar",["201"],["202"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'date' and 'findDiaryData'. Either include them or remove the dependency array.",["221"],"'takeLatest' is defined but never used.","'DELETE_DIARY_REQUEST' is defined but never used.","'DELETE_DIARY_SUCCESS' is defined but never used.","'DELETE_DIARY_FAILURE' is defined but never used.","'COUNT_REQUEST' is defined but never used.","'COUNT_SUCCESS' is defined but never used.","'COUNT_FAILURE' is defined but never used.",["201"],["202"],"Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"messageId":"226","fix":"227","desc":"228"},{"messageId":"229","fix":"230","desc":"231"},{"messageId":"226","fix":"232","desc":"228"},{"messageId":"229","fix":"233","desc":"231"},{"messageId":"226","fix":"234","desc":"228"},{"messageId":"229","fix":"235","desc":"231"},{"messageId":"226","fix":"236","desc":"228"},{"messageId":"229","fix":"237","desc":"231"},{"messageId":"226","fix":"238","desc":"228"},{"messageId":"229","fix":"239","desc":"231"},{"messageId":"226","fix":"240","desc":"228"},{"messageId":"229","fix":"241","desc":"231"},{"messageId":"226","fix":"242","desc":"228"},{"messageId":"229","fix":"243","desc":"231"},{"messageId":"226","fix":"244","desc":"228"},{"messageId":"229","fix":"245","desc":"231"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [date, diaries.length, getCount, mode, prevDiaryLength]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch, isAuth, props.history, user]",{"range":"250","text":"251"},"removeEscape",{"range":"252","text":"253"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"254","text":"255"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"256","text":"253"},{"range":"257","text":"255"},{"range":"258","text":"253"},{"range":"259","text":"255"},{"range":"260","text":"253"},{"range":"261","text":"255"},{"range":"262","text":"253"},{"range":"263","text":"255"},{"range":"264","text":"253"},{"range":"265","text":"255"},{"range":"266","text":"253"},{"range":"267","text":"255"},{"range":"268","text":"253"},{"range":"269","text":"255"},"Update the dependencies array to be: [date, findDiaryData, openModal]",{"range":"270","text":"271"},[1970,1982],"[date, diaries.length, getCount, mode, prevDiaryLength]",[3219,3227],"[dispatch, isAuth, props.history, user]",[1479,1480],"",[1479,1479],"\\",[1481,1482],[1481,1481],[1494,1495],[1494,1494],[1496,1497],[1496,1496],[928,929],[928,928],[930,931],[930,930],[943,944],[943,943],[945,946],[945,945],[2179,2190],"[date, findDiaryData, openModal]"]