[{"C:\\react\\mood\\client\\src\\index.js":"1","C:\\react\\mood\\client\\src\\App.js":"2","C:\\react\\mood\\client\\src\\saga\\index.js":"3","C:\\react\\mood\\client\\src\\store.js":"4","C:\\react\\mood\\client\\src\\reducers\\index.js":"5","C:\\react\\mood\\client\\src\\components\\Nav\\index.js":"6","C:\\react\\mood\\client\\src\\components\\Chart\\index.js":"7","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js":"8","C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js":"9","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js":"10","C:\\react\\mood\\client\\src\\actions\\userAction.js":"11","C:\\react\\mood\\client\\src\\saga\\userSage.js":"12","C:\\react\\mood\\client\\src\\reducers\\userReducer.js":"13","C:\\react\\mood\\client\\src\\actions\\types.js":"14","C:\\react\\mood\\client\\src\\components\\Modal\\index.js":"15","C:\\react\\mood\\client\\src\\saga\\diarySaga.js":"16","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js":"17","C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js":"18","C:\\react\\mood\\client\\src\\saga\\globalSaga.js":"19","C:\\react\\mood\\client\\src\\actions\\globalAction.js":"20","C:\\react\\mood\\client\\src\\reducers\\globalReducer.js":"21","C:\\react\\mood\\client\\src\\components\\BG.js":"22","C:\\react\\mood\\client\\src\\actions\\diaryAction.js":"23"},{"size":287,"mtime":1608086427846,"results":"24","hashOfConfig":"25"},{"size":825,"mtime":1607428833407,"results":"26","hashOfConfig":"25"},{"size":212,"mtime":1607045407240,"results":"27","hashOfConfig":"25"},{"size":456,"mtime":1606562221579,"results":"28","hashOfConfig":"25"},{"size":234,"mtime":1607048971534,"results":"29","hashOfConfig":"25"},{"size":1405,"mtime":1607144987576,"results":"30","hashOfConfig":"25"},{"size":3022,"mtime":1607319019366,"results":"31","hashOfConfig":"25"},{"size":4238,"mtime":1607677820543,"results":"32","hashOfConfig":"25"},{"size":4103,"mtime":1608086349610,"results":"33","hashOfConfig":"25"},{"size":3176,"mtime":1607405547496,"results":"34","hashOfConfig":"25"},{"size":510,"mtime":1607318595149,"results":"35","hashOfConfig":"25"},{"size":3535,"mtime":1607407063590,"results":"36","hashOfConfig":"25"},{"size":1543,"mtime":1607402847128,"results":"37","hashOfConfig":"25"},{"size":1331,"mtime":1607318641992,"results":"38","hashOfConfig":"25"},{"size":4040,"mtime":1607317655530,"results":"39","hashOfConfig":"25"},{"size":2204,"mtime":1607407031342,"results":"40","hashOfConfig":"25"},{"size":1204,"mtime":1607317921662,"results":"41","hashOfConfig":"25"},{"size":3798,"mtime":1608086353897,"results":"42","hashOfConfig":"25"},{"size":572,"mtime":1607319090539,"results":"43","hashOfConfig":"25"},{"size":124,"mtime":1607216020435,"results":"44","hashOfConfig":"25"},{"size":478,"mtime":1607217034406,"results":"45","hashOfConfig":"25"},{"size":390,"mtime":1607226082320,"results":"46","hashOfConfig":"25"},{"size":352,"mtime":1607318757327,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g9e3iv",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\mood\\client\\src\\index.js",[],"C:\\react\\mood\\client\\src\\App.js",[],["106","107"],"C:\\react\\mood\\client\\src\\saga\\index.js",[],["108","109"],"C:\\react\\mood\\client\\src\\store.js",[],["110","111"],"C:\\react\\mood\\client\\src\\reducers\\index.js",[],["112","113"],"C:\\react\\mood\\client\\src\\components\\Nav\\index.js",[],["114","115"],"C:\\react\\mood\\client\\src\\components\\Chart\\index.js",["116","117","118"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst Chart = ({date, mode}) =>{\r\n  const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n\r\n  const [count, setCount] = useState([0,0,0,0,0]);\r\n  \r\nconst getCount = () =>{\r\n    let one=0, two=0, three=0, four=0, five=0;\r\n    const splitDate = date.split(\"-\");\r\n    if(mode){\r\n      diaries.map(diary => {\r\n        if(diary.post_year===Number(splitDate[0]) && diary.post_month===Number(splitDate[1])) {\r\n          switch(Number(diary.mood)){\r\n            case 1:\r\n              one++;\r\n              break;\r\n            case 2:\r\n              two++;\r\n              break;\r\n            case 3:\r\n              three++;\r\n              break;\r\n            case 4:\r\n              four++;\r\n              break;\r\n            case 5:\r\n              five++;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      }\r\n    }\r\n  )}else{\r\n      diaries.map(diary => {\r\n        if(diary.post_year===Number(splitDate[0])) {\r\n          switch(Number(diary.mood)){\r\n            case 1:\r\n              one++;\r\n              break;\r\n            case 2:\r\n              two++;\r\n              break;\r\n            case 3:\r\n              three++;\r\n              break;\r\n            case 4:\r\n              four++;\r\n              break;\r\n            case 5:\r\n              five++;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      }\r\n    })\r\n  }\r\n  setCount([one, two, three, four, five]);\r\n};\r\n\r\nuseEffect(()=>{\r\n  getCount();\r\n},[date, mode, diaries]);\r\n\r\n\r\nconst state = {\r\n    labels: ['SOOOO HAPPY', 'HAPPY', 'SOSO', 'BAD', 'UPSET'],\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: count,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(153, 102, 255, 0.2)'\r\n        ],\r\n        hoverBackgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)'\r\n        ],\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n             <Pie\r\n                data={state}\r\n                width={250}\r\n                height={100}\r\n                options={{\r\n                  responsive: false,\r\n                  maintainAspectRatio: false,\r\n                  legend: {\r\n                    display: false,\r\n                    position: 'bottom'\r\n                  }\r\n                }}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js",["119"],"C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js",["120","121","122","123"],"C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js",["124","125","126","127"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { login } from '../../actions/userAction';\r\nimport './styles.scss';\r\n\r\nconst LoginPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n\r\n    // login이라는 action 이 있어서 loginResult라고 정함\r\n    const isAuth = useSelector((state)=>state.userReducer.isAuth);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '') {\r\n            dispatch(login({email, password}));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            props.history.push('/');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>LOG IN</h1>\r\n            <section className=\"login-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            LOGIN\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/register\">register 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\react\\mood\\client\\src\\actions\\userAction.js",[],"C:\\react\\mood\\client\\src\\saga\\userSage.js",[],["128","129"],"C:\\react\\mood\\client\\src\\reducers\\userReducer.js",[],"C:\\react\\mood\\client\\src\\actions\\types.js",[],"C:\\react\\mood\\client\\src\\components\\Modal\\index.js",["130","131"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from 'antd';\r\nimport { newDiary, editDiary } from '../../actions/diaryAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst ModalPage = ({ date, openModal }) => {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = useState(openModal);\r\n  const [mood, setMood] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [isEditDiary, setIsEditDiary] = useState(false); // true면 글을 수정하는것, false면 글을 처음쓰는것\r\n  const [diaryId, setDiaryId] = useState('');\r\n  const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n\r\n  const findDiaryData = () =>{\r\n    console.log(diaries);\r\n    console.log('이거좀실행되라ㅡㅡ')\r\n    const splitedDate = date.split('-');\r\n    \r\n    let dayInfo = [];\r\n    dayInfo = diaries &&\r\n      diaries.filter((item) => {\r\n        if (item.post_year === Number(splitedDate[0]) && item.post_month === Number(splitedDate[1]) && item.post_day === Number(splitedDate[2])) {\r\n          return true;\r\n        }\r\n      });\r\n    if(dayInfo !== null){\r\n      if(dayInfo.length > 0){\r\n        setIsEditDiary(true);\r\n        setMood(dayInfo[0].mood);\r\n        setContent(dayInfo[0].content);\r\n        setDiaryId(dayInfo[0]._id);\r\n      }else{\r\n        setIsEditDiary(false);\r\n        setMood(\"\");\r\n        setContent(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOk = (e) => {\r\n    e.preventDefault();\r\n    if (mood === '') {\r\n      alert('mood를 선택해 주세요');\r\n      return;\r\n    }\r\n    if (content === '') {\r\n      alert('일기를 작성해 주세요');\r\n      return;\r\n    }\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n\r\n    if (isEditDiary) {\r\n        dispatch(editDiary({\r\n          diaryId,\r\n          mood,\r\n          content\r\n        })\r\n      )\r\n    } else {\r\n        dispatch(newDiary({\r\n            date,\r\n            mood,\r\n            content\r\n          })\r\n        )\r\n      }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(date);\r\n    if (openModal) {\r\n      setVisible(true);\r\n      findDiaryData();\r\n    }\r\n  },[openModal]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={date}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width='600px'\r\n        wrapClassName='modal-container'\r\n      >\r\n        <form className='form-diary'>\r\n          <ul className='mood'>\r\n            <li\r\n              value='1'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"1\" ? 'listClicked' : ''}\r\n              title=\"SOOOO HAPPY\"\r\n            >\r\n              😁\r\n            </li>\r\n            <li\r\n              value='2'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"2\" ? 'listClicked' : ''}\r\n              title=\"=HAPPY\"\r\n            >\r\n              🌝\r\n            </li>\r\n            <li\r\n              value='3'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"3\" ? 'listClicked' : ''}\r\n              title=\"SOSO\"\r\n            >\r\n              😐\r\n            </li>\r\n            <li\r\n              value='4'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"4\" ? 'listClicked' : ''}\r\n              title=\"BAD\"\r\n            >\r\n              😭\r\n            </li>\r\n            <li\r\n              value='5'\r\n              onClick={(e) => setMood(`${e.target.value}`)}\r\n              className={mood === \"5\" ? 'listClicked' : ''}\r\n              title=\"UPSET\"\r\n            >\r\n              😡\r\n            </li>\r\n          </ul>\r\n          <textarea\r\n            onChange={(e) => setContent(e.currentTarget.value)}\r\n            value={content}\r\n          ></textarea>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalPage;\r\n","C:\\react\\mood\\client\\src\\saga\\diarySaga.js",[],"C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js",["132"],"import {\r\n    DIARY_SUCCESS,\r\n    DIARY_FAILURE,\r\n    EDIT_DIARY_SUCCESS,\r\n    EDIT_DIARY_FAILURE,\r\n    NEW_DIARY_SUCCESS,\r\n    NEW_DIARY_FAILURE,\r\n} from '../actions/types';\r\n\r\nconst initState = {\r\n    diaries :[],\r\n    isUpdated : null\r\n}\r\n\r\nconst userReducer = ( state = initState , action) => {\r\n    switch(action.type){\r\n        case NEW_DIARY_SUCCESS :\r\n            state.diaries.push(action.data.diary)\r\n            state.isUpdated = action.data.diary._id;\r\n            return { ...state };\r\n        case NEW_DIARY_FAILURE :\r\n            return { ...state };\r\n        case DIARY_SUCCESS :\r\n            state.diaries = action.data.diaries;\r\n            return { ...state };\r\n        case DIARY_FAILURE :\r\n            return { ...state };      \r\n        case EDIT_DIARY_SUCCESS :\r\n            const id = state.diaries.findIndex((diary) => {if(diary._id === action.data.diary._id){return true}});\r\n            state.diaries[id] = action.data.diary;\r\n            state.isUpdated = action.data.diary._id;\r\n            return { ...state };\r\n        case EDIT_DIARY_FAILURE :\r\n            return { ...state };    \r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n\r\nexport default userReducer;",["133","134"],"C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js",["135"],"C:\\react\\mood\\client\\src\\saga\\globalSaga.js",[],"C:\\react\\mood\\client\\src\\actions\\globalAction.js",[],"C:\\react\\mood\\client\\src\\reducers\\globalReducer.js",[],"C:\\react\\mood\\client\\src\\components\\BG.js",[],["136","137"],"C:\\react\\mood\\client\\src\\actions\\diaryAction.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"138","replacedBy":"144"},{"ruleId":"140","replacedBy":"145"},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"138","replacedBy":"148"},{"ruleId":"140","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":14,"column":25,"nodeType":"152","messageId":"153","endLine":14,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":38,"column":25,"nodeType":"152","messageId":"153","endLine":38,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":67,"column":3,"nodeType":"156","endLine":67,"endColumn":24,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":96,"column":7,"nodeType":"156","endLine":96,"endColumn":26,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":40,"column":18,"nodeType":"162","messageId":"163","endLine":40,"endColumn":19,"suggestions":"164"},{"ruleId":"160","severity":1,"message":"165","line":40,"column":20,"nodeType":"162","messageId":"163","endLine":40,"endColumn":21,"suggestions":"166"},{"ruleId":"160","severity":1,"message":"161","line":40,"column":33,"nodeType":"162","messageId":"163","endLine":40,"endColumn":34,"suggestions":"167"},{"ruleId":"160","severity":1,"message":"165","line":40,"column":35,"nodeType":"162","messageId":"163","endLine":40,"endColumn":36,"suggestions":"168"},{"ruleId":"160","severity":1,"message":"161","line":28,"column":22,"nodeType":"162","messageId":"163","endLine":28,"endColumn":23,"suggestions":"169"},{"ruleId":"160","severity":1,"message":"165","line":28,"column":24,"nodeType":"162","messageId":"163","endLine":28,"endColumn":25,"suggestions":"170"},{"ruleId":"160","severity":1,"message":"161","line":28,"column":37,"nodeType":"162","messageId":"163","endLine":28,"endColumn":38,"suggestions":"171"},{"ruleId":"160","severity":1,"message":"165","line":28,"column":39,"nodeType":"162","messageId":"163","endLine":28,"endColumn":40,"suggestions":"172"},{"ruleId":"138","replacedBy":"173"},{"ruleId":"140","replacedBy":"174"},{"ruleId":"150","severity":1,"message":"175","line":24,"column":29,"nodeType":"152","messageId":"176","endLine":24,"endColumn":31},{"ruleId":"154","severity":1,"message":"177","line":86,"column":5,"nodeType":"156","endLine":86,"endColumn":16,"suggestions":"178"},{"ruleId":"150","severity":1,"message":"179","line":29,"column":56,"nodeType":"152","messageId":"176","endLine":29,"endColumn":58},{"ruleId":"138","replacedBy":"180"},{"ruleId":"140","replacedBy":"181"},{"ruleId":"154","severity":1,"message":"182","line":45,"column":6,"nodeType":"156","endLine":45,"endColumn":20,"suggestions":"183"},{"ruleId":"138","replacedBy":"184"},{"ruleId":"140","replacedBy":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],["186"],["187"],["186"],["187"],["186"],["187"],["186"],["187"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCount'. Either include it or remove the dependency array.","ArrayExpression",["188"],"React Hook useEffect has missing dependencies: 'diaries.length', 'dispatch', 'props.history', and 'user'. Either include them or remove the dependency array.",["189"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["190","191"],"Unnecessary escape character: \\..",["192","193"],["194","195"],["196","197"],["198","199"],["200","201"],["202","203"],["204","205"],["186"],["187"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'date' and 'findDiaryData'. Either include them or remove the dependency array.",["206"],"Array.prototype.findIndex() expects a value to be returned at the end of arrow function.",["186"],["187"],"React Hook useEffect has missing dependencies: 'dispatch', 'isAuth', and 'props.history'. Either include them or remove the dependency array.",["207"],["186"],["187"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"messageId":"212","fix":"213","desc":"214"},{"messageId":"215","fix":"216","desc":"217"},{"messageId":"212","fix":"218","desc":"214"},{"messageId":"215","fix":"219","desc":"217"},{"messageId":"212","fix":"220","desc":"214"},{"messageId":"215","fix":"221","desc":"217"},{"messageId":"212","fix":"222","desc":"214"},{"messageId":"215","fix":"223","desc":"217"},{"messageId":"212","fix":"224","desc":"214"},{"messageId":"215","fix":"225","desc":"217"},{"messageId":"212","fix":"226","desc":"214"},{"messageId":"215","fix":"227","desc":"217"},{"messageId":"212","fix":"228","desc":"214"},{"messageId":"215","fix":"229","desc":"217"},{"messageId":"212","fix":"230","desc":"214"},{"messageId":"215","fix":"231","desc":"217"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [date, mode, diaries, getCount]",{"range":"236","text":"237"},"Update the dependencies array to be: [diaries.length, dispatch, isAuth, isUpdated, props.history, user]",{"range":"238","text":"239"},"removeEscape",{"range":"240","text":"241"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"242","text":"243"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"244","text":"241"},{"range":"245","text":"243"},{"range":"246","text":"241"},{"range":"247","text":"243"},{"range":"248","text":"241"},{"range":"249","text":"243"},{"range":"250","text":"241"},{"range":"251","text":"243"},{"range":"252","text":"241"},{"range":"253","text":"243"},{"range":"254","text":"241"},{"range":"255","text":"243"},{"range":"256","text":"241"},{"range":"257","text":"243"},"Update the dependencies array to be: [date, findDiaryData, openModal]",{"range":"258","text":"259"},"Update the dependencies array to be: [colors, dispatch, isAuth, props.history, user]",{"range":"260","text":"261"},[1620,1641],"[date, mode, diaries, getCount]",[3473,3492],"[diaries.length, dispatch, isAuth, isUpdated, props.history, user]",[1320,1321],"",[1320,1320],"\\",[1322,1323],[1322,1322],[1335,1336],[1335,1335],[1337,1338],[1337,1337],[975,976],[975,975],[977,978],[977,977],[990,991],[990,990],[992,993],[992,992],[2179,2190],"[date, findDiaryData, openModal]",[1366,1380],"[colors, dispatch, isAuth, props.history, user]"]