[{"C:\\react\\mood\\client\\src\\index.js":"1","C:\\react\\mood\\client\\src\\App.js":"2","C:\\react\\mood\\client\\src\\saga\\index.js":"3","C:\\react\\mood\\client\\src\\store.js":"4","C:\\react\\mood\\client\\src\\reducers\\index.js":"5","C:\\react\\mood\\client\\src\\reportWebVitals.js":"6","C:\\react\\mood\\client\\src\\components\\Nav\\index.js":"7","C:\\react\\mood\\client\\src\\components\\Chart\\index.js":"8","C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js":"9","C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js":"10","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js":"11","C:\\react\\mood\\client\\src\\actions\\userAction.js":"12","C:\\react\\mood\\client\\src\\saga\\userSage.js":"13","C:\\react\\mood\\client\\src\\reducers\\userReducer.js":"14","C:\\react\\mood\\client\\src\\actions\\types.js":"15","C:\\react\\mood\\client\\src\\components\\Modal\\index.js":"16","C:\\react\\mood\\client\\src\\saga\\diarySaga.js":"17","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js":"18","C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js":"19"},{"size":568,"mtime":1606562243304,"results":"20","hashOfConfig":"21"},{"size":751,"mtime":1607062977370,"results":"22","hashOfConfig":"21"},{"size":212,"mtime":1607045407240,"results":"23","hashOfConfig":"21"},{"size":456,"mtime":1606562221579,"results":"24","hashOfConfig":"21"},{"size":234,"mtime":1607048971534,"results":"25","hashOfConfig":"21"},{"size":362,"mtime":1606480407518,"results":"26","hashOfConfig":"21"},{"size":1206,"mtime":1607062990278,"results":"27","hashOfConfig":"21"},{"size":3413,"mtime":1607144795986,"results":"28","hashOfConfig":"21"},{"size":3930,"mtime":1607084447506,"results":"29","hashOfConfig":"21"},{"size":5232,"mtime":1606999566982,"results":"30","hashOfConfig":"21"},{"size":3107,"mtime":1607055703669,"results":"31","hashOfConfig":"21"},{"size":630,"mtime":1606993581629,"results":"32","hashOfConfig":"21"},{"size":2695,"mtime":1607067007356,"results":"33","hashOfConfig":"21"},{"size":1373,"mtime":1607066415643,"results":"34","hashOfConfig":"21"},{"size":1663,"mtime":1606993590925,"results":"35","hashOfConfig":"21"},{"size":4131,"mtime":1607068759497,"results":"36","hashOfConfig":"21"},{"size":1627,"mtime":1607051548014,"results":"37","hashOfConfig":"21"},{"size":856,"mtime":1607067658517,"results":"38","hashOfConfig":"21"},{"size":2160,"mtime":1607067395115,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1g9e3iv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\mood\\client\\src\\index.js",[],["88","89"],"C:\\react\\mood\\client\\src\\App.js",[],"C:\\react\\mood\\client\\src\\saga\\index.js",[],["90","91"],"C:\\react\\mood\\client\\src\\store.js",[],"C:\\react\\mood\\client\\src\\reducers\\index.js",[],["92","93"],"C:\\react\\mood\\client\\src\\reportWebVitals.js",[],["94","95"],"C:\\react\\mood\\client\\src\\components\\Nav\\index.js",[],"C:\\react\\mood\\client\\src\\components\\Chart\\index.js",["96","97","98"],"C:\\react\\mood\\client\\src\\components\\LandingPage\\index.js",["99"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Calendar } from 'antd';\r\nimport {getDiary} from '../../actions/diaryAction';\r\nimport {getMe} from '../../actions/userAction';\r\nimport Chart from '../Chart';\r\nimport Modal from '../Modal';\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst LandingPage = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const [title, setTitle] = useState(new Date(Date.now()).getMonth() + 1)\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [pickDate, setPickDate] = useState(`${new Date(Date.now()).getFullYear()}-${\r\n      new Date(Date.now()).getMonth() + 1\r\n    }`); \r\n    const [monthOrYear, setMonthOrYear] = useState(true);\r\n    const isAuth = useSelector((state)=>state.userReducer.isAuth);\r\n    const user = useSelector((state)=>state.userReducer.user);\r\n    const diaries = useSelector(state=>state.diaryReducer.diaries);\r\n\r\n    // 구체적인 날짜가 선택되었을때 작동\r\n    // 일기를 작성할때 사용\r\n    const onSelect = async(value) =>{\r\n        setPickDate(value.format('YYYY-MM-DD'));   \r\n        await setOpenModal(true);\r\n        setOpenModal(false);\r\n        console.log(789);\r\n    }\r\n\r\n    // 년과 월이 서로 변경될때 작동\r\n    // 이때 선택된 패널의 데이터를 가져오면 될듯\r\n    const onPanelChange = async(value) =>{\r\n        console.log('패널이바뀜');\r\n        console.log(value.format('YYYY-MM-DD'));\r\n    }\r\n\r\n\r\n    const dateCellRender = (value) =>{\r\n        let dateItem;\r\n        if(value.format('DD')===\"01\"){\r\n            const month = Number(value.format('MM'))-1;            \r\n            setTitle(month === 0? 12 : month);\r\n            setMonthOrYear(true);\r\n        }\r\n        let date = value.format(\"YYYY-MM-DD\").split(\"-\");\r\n        let day = parseInt(date[2]);\r\n        let month = parseInt(date[1]);\r\n        let year = parseInt(date[0]);\r\n        if(diaries.length > 0){\r\n            dateItem = diaries.find(diary=>diary.post_year === year && diary.post_month===month && diary.post_day === day);\r\n        }\r\n        return (\r\n            <>\r\n                {dateItem && dateItem.content}\r\n            </>\r\n        )\r\n    }\r\n\r\n    const monthCellRender = (value) =>{\r\n        let monthItem=[];\r\n        if(value.format('MM')===\"01\"){\r\n            setTitle(value.format('YYYY'));\r\n            setMonthOrYear(false);\r\n        }\r\n        let date = value.format(\"YYYY-MM-DD\").split(\"-\");\r\n        let month = parseInt(date[1]);\r\n        let year = parseInt(date[0]);\r\n        if(diaries.length > 0){\r\n            monthItem = diaries.filter(diary=>diary.post_year === year && diary.post_month===month);\r\n        }\r\n        monthItem.sort((a, b)=>Number(a.post_day) - Number(b.post_day));\r\n        if (monthItem.length > 0){\r\n            return monthItem.map((diary)=> \r\n            <>\r\n                <div>{diary.post_day}</div>\r\n                <div>{diary.mood}</div>\r\n                <div>{diary.content}</div>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log('초기에 실행됨')\r\n        if(isAuth === null){\r\n            props.history.push('/login');\r\n        }else{\r\n            dispatch(getDiary());\r\n            if(Object.keys(user).length === 0){\r\n                dispatch(getMe())\r\n            }\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"landing-container\">\r\n            <h2 className='title'>{title}</h2>\r\n            <h3 className=\"self-promise\">{user.selfPromise}</h3>\r\n            <Chart date={pickDate} mode={monthOrYear}/>\r\n            <Calendar \r\n                onSelect={onSelect}\r\n                onPanelChange={onPanelChange}\r\n                dateCellRender={dateCellRender}\r\n                monthCellRender={monthCellRender}\r\n            />\r\n            <Modal date={pickDate} openModal={openModal}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","C:\\react\\mood\\client\\src\\components\\RegisterPage\\index.js",["100","101","102","103"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {newUser} from '../../actions/userAction';\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst RegisterPage = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const registerResult = useSelector((state)=>state.userReducer.register);\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [nameCss, setNameCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n    const [confirmPwCss, setConfirmPwCss] = useState('');\r\n\r\n\r\n    console.log(registerResult);\r\n\r\n        const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        if (name === '') {\r\n            setNameCss('warning');\r\n            setTimeout(() => setNameCss(''), 1500);\r\n        }\r\n        if (confirmPassword === '') {\r\n            setConfirmPwCss('warning');\r\n            setTimeout(() => setConfirmPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '' &&\r\n                name !== '' &&\r\n                confirmPassword !== ''\r\n        ) {\r\n            dispatch(newUser({\r\n                    email,\r\n                    password,\r\n                    name\r\n            }))\r\n        }\r\n    };\r\n\r\n    const handlePw = (e) => {\r\n        if (e.currentTarget.value !== password) {\r\n            setConfirmPwCss('warning');\r\n        } else {\r\n            setConfirmPassword(e.currentTarget.value);\r\n            setConfirmPwCss('');\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(registerResult){\r\n            props.history.push('/login');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <h1>REGISTER</h1>\r\n            <section className=\"register-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setName(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"name\" className={nameCss}>\r\n                            NAME\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirm-pw\"\r\n                            id=\"confirm-pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={handlePw}\r\n                        />\r\n                        <label htmlFor=\"confirm-pw\" className={confirmPwCss}>\r\n                            CONFIRM PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            REGISTER\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/login\">Login 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\react\\mood\\client\\src\\components\\LoginPage\\index.js",["104","105","106","107"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { login } from '../../actions/userAction';\r\nimport './styles.scss';\r\n\r\nconst LoginPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailCss, setEmailCss] = useState('');\r\n    const [pwCss, setPwCss] = useState('');\r\n\r\n    const isAuth = useSelector((state)=>state.userReducer.isAuth);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            setEmailCss('warning');\r\n            setTimeout(() => setEmailCss(''), 1500);\r\n        }\r\n        if (password === '') {\r\n            setPwCss('warning');\r\n            setTimeout(() => setPwCss(''), 1500);\r\n        }\r\n        //email 타입체크\r\n        if(!(/^((\\w|[\\-\\.])+)@((\\w|[\\-\\.])+)\\.([A-Za-z]+)$/.test(email))){\r\n            alert('이메일 형식에 맞게 입력해 주세요.');\r\n            return false;\r\n        }\r\n        if (password !== '') {\r\n            dispatch(login({email, password}));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            props.history.push('/');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>LOG IN</h1>\r\n            <section className=\"login-form\">\r\n                <form>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"email\" className={emailCss}>\r\n                            EMAIL\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"pw\"\r\n                            id=\"pw\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        <label htmlFor=\"pw\" className={pwCss}>\r\n                            PASSWORD\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"submit-btn\">\r\n                        <button type=\"submit\" onClick={handleClick}>\r\n                            LOGIN\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"caption\">\r\n                    <p>\r\n                        <Link to=\"/register\">register 하러가기</Link>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\react\\mood\\client\\src\\actions\\userAction.js",[],"C:\\react\\mood\\client\\src\\saga\\userSage.js",["108","109","110","111"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ME_REQUEST, \r\n    ME_SUCCESS, \r\n    ME_FAILURE, \r\n    EDIT_ME_REQUEST, \r\n    EDIT_ME_SUCCESS,\r\n    EDIT_ME_FAILURE, \r\n    NEW_ME_REQUEST, \r\n    NEW_ME_SUCCESS, \r\n    NEW_ME_FAILURE,\r\n    LOGIN_REQUEST, \r\n    LOGIN_SUCCESS, \r\n    LOGIN_FAILURE,\r\n    LOGOUT_SUCCESS, \r\n    LOGOUT_FAILURE} from '../actions/types';\r\n\r\nfunction* postLogin({payload}){\r\n    const result = yield axios.post(\"/api/user/login\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield put({type:LOGIN_SUCCESS, data});\r\n            console.log( data +\"여기 있음!!!\")\r\n            localStorage.setItem('user_token', data.user.token);\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:LOGIN_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postNewMe({payload}){\r\n    const result = yield axios.post(\"/api/user\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status } = result;\r\n        if(status === 201){\r\n            yield put({type:NEW_ME_SUCCESS});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:NEW_ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* getMe(){\r\n    const result = yield axios.get(\"/api/user\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data} = result;\r\n        if(status === 200){\r\n            yield put({type:ME_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postEditMe({payload}){\r\n    const result = yield axios.patch(\"/api/user\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            console.log(data);\r\n            yield put({type:EDIT_ME_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message);\r\n        yield put({type:EDIT_ME_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* watchUser(){\r\n    yield takeEvery(NEW_ME_REQUEST, postNewMe);\r\n    yield takeEvery(LOGIN_REQUEST, postLogin);\r\n    yield takeEvery(ME_REQUEST, getMe);\r\n    yield takeEvery(EDIT_ME_REQUEST, postEditMe);\r\n}\r\n\r\nexport default function* userSaga () {\r\n    yield all([fork(watchUser)])\r\n}","C:\\react\\mood\\client\\src\\reducers\\userReducer.js",[],"C:\\react\\mood\\client\\src\\actions\\types.js",[],"C:\\react\\mood\\client\\src\\components\\Modal\\index.js",["112"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Modal } from 'antd';\r\nimport {newDiary} from '../../actions/diaryAction';\r\n\r\nimport './styles.scss';\r\n\r\nconst ModalPage = ({ date, diaryInfo, openModal }) => {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = useState(openModal);\r\n  const [mood, setMood] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [editDiary, setEditDiary] = useState(false); // true면 글을 수정하는것, false면 글을 처음쓰는것\r\n\r\n  /*const sendDiaryInfo = useCallback((diaryInfo) => {\r\n    dispatch({ type: POST_DIARY, diaryInfo });\r\n  });\r\n\r\n  const editDiary = useCallback((diaryInfo) => {\r\n    dispatch({ type: EDIT_DIARY, diaryInfo });\r\n  });*/\r\n\r\n  /*const showData = () => {\r\n    // 기존에 데이터가 적혀있다면 그 데이터들을 보여줌\r\n    const splitedDate = date.split('-');\r\n    const dayInfo =\r\n      diaryInfo &&\r\n      diaryInfo.filter((item) => {\r\n        if (\r\n          `${item.POST_YEAR}-${item.POST_MONTH}-${item.POST_DAY}` ===\r\n          `${splitedDate[0]}-${parseInt(splitedDate[1])}-${parseInt(\r\n            splitedDate[2]\r\n          )}`\r\n        ) {\r\n          return true;\r\n        }\r\n      });\r\n    if (dayInfo !== 'undifined') {\r\n      if (dayInfo.length > 0) {\r\n        setIsUpload(false); // 에딧한다고 알려줌\r\n        setMood(parseInt(dayInfo[0].MOOD));\r\n        setContent(dayInfo[0].CONTENT);\r\n      }\r\n    } else {\r\n      setIsUpload(true); // 처음 글쓴다고 알려줌\r\n    }\r\n  };*/\r\n\r\n  const handleOk = (e) => {\r\n    e.preventDefault();\r\n    if (mood === '') {\r\n      alert('mood를 선택해 주세요');\r\n      return;\r\n    }\r\n    if (content === '') {\r\n      alert('일기를 작성해 주세요');\r\n      return;\r\n    }\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n\r\n    if (editDiary) {\r\n      /*sendDiaryInfo({\r\n        date,\r\n        mood,\r\n        content\r\n      });*/\r\n    } else {\r\n        dispatch(newDiary({\r\n            date,\r\n            mood,\r\n            content\r\n          })\r\n        )\r\n      }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n    setMood('');\r\n    setContent('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    /*if (date.length > 7) {\r\n      showData();\r\n    }*/\r\n    if (openModal) {\r\n      setVisible(true);\r\n    }\r\n  },[openModal]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={date}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width='600px'\r\n        wrapClassName='modal-container'\r\n      >\r\n        <form className='form-diary'>\r\n          <ul className='mood'>\r\n            <li\r\n              value='1'\r\n              onClick={(e) => setMood(e.target.value)}\r\n              className={mood === 1 ? 'listClicked' : ''}\r\n              title=\"sooooooooo happy\"\r\n            >\r\n              😁\r\n            </li>\r\n            <li\r\n              value='2'\r\n              onClick={(e) => setMood(e.target.value)}\r\n              className={mood === 2 ? 'listClicked' : ''}\r\n              title=\"happy\"\r\n            >\r\n              🌝\r\n            </li>\r\n            <li\r\n              value='3'\r\n              onClick={(e) => setMood(e.target.value)}\r\n              className={mood === 3 ? 'listClicked' : ''}\r\n              title=\"normal\"\r\n            >\r\n              😐\r\n            </li>\r\n            <li\r\n              value='4'\r\n              onClick={(e) => setMood(e.target.value)}\r\n              className={mood === 4 ? 'listClicked' : ''}\r\n              title=\"sad\"\r\n            >\r\n              😭\r\n            </li>\r\n            <li\r\n              value='5'\r\n              onClick={(e) => setMood(e.target.value)}\r\n              className={mood === 5 ? 'listClicked' : ''}\r\n              title=\"upset\"\r\n            >\r\n              😡\r\n            </li>\r\n          </ul>\r\n          <textarea\r\n            onChange={(e) => setContent(e.currentTarget.value)}\r\n            value={content}\r\n          ></textarea>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalPage;\r\n","C:\\react\\mood\\client\\src\\saga\\diarySaga.js",["113","114","115","116","117","118","119","120","121","122","123"],"import {all, fork, takeEvery, takeLatest, put, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    DIARY_REQUEST,\r\n    DIARY_SUCCESS,\r\n    DIARY_FAILURE,\r\n    EDIT_DIARY_REQUEST,\r\n    EDIT_DIARY_SUCCESS,\r\n    EDIT_DIARY_FAILURE,\r\n    NEW_DIARY_REQUEST,\r\n    NEW_DIARY_SUCCESS,\r\n    NEW_DIARY_FAILURE,\r\n    DELETE_DIARY_REQUEST,\r\n    DELETE_DIARY_SUCCESS,\r\n    DELETE_DIARY_FAILURE,\r\n    COUNT_REQUEST,\r\n    COUNT_SUCCESS,\r\n    COUNT_FAILURE\r\n} from '../actions/types';\r\n\r\nfunction* getDiary({payload}){\r\n    const result = yield axios.get(\"/api/diary\", {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 200){\r\n            yield put({type:DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* postNewDiary({payload}){\r\n    const result = yield axios.post(\"/api/diary\", payload, {validateStatus : function (status){return status < 500}});\r\n    try{\r\n        const { status, data } = result;\r\n        if(status === 201){\r\n            yield put({type:NEW_DIARY_SUCCESS, data});\r\n        }else{\r\n            throw new Error();\r\n        }\r\n    }catch(error){\r\n        yield alert(result.data.message)\r\n        yield put({type:NEW_DIARY_FAILURE});\r\n    }\r\n}\r\n\r\nfunction* watchDiary(){\r\n    yield takeEvery(DIARY_REQUEST, getDiary);\r\n    yield takeEvery(NEW_DIARY_REQUEST, postNewDiary);\r\n}\r\n\r\nexport default function* diarySaga () {\r\n    yield all([fork(watchDiary)])\r\n}","C:\\react\\mood\\client\\src\\reducers\\diaryReducer.js",["124","125","126","127","128","129"],"C:\\react\\mood\\client\\src\\components\\SettingPage\\index.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"130","replacedBy":"136"},{"ruleId":"132","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":17,"column":25,"nodeType":"142","messageId":"143","endLine":17,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":42,"column":25,"nodeType":"142","messageId":"143","endLine":42,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":75,"column":5,"nodeType":"146","endLine":75,"endColumn":17,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":94,"column":7,"nodeType":"146","endLine":94,"endColumn":9,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":44,"column":22,"nodeType":"152","messageId":"153","endLine":44,"endColumn":23,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"155","line":44,"column":24,"nodeType":"152","messageId":"153","endLine":44,"endColumn":25,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"151","line":44,"column":37,"nodeType":"152","messageId":"153","endLine":44,"endColumn":38,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"155","line":44,"column":39,"nodeType":"152","messageId":"153","endLine":44,"endColumn":40,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"151","line":27,"column":22,"nodeType":"152","messageId":"153","endLine":27,"endColumn":23,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"155","line":27,"column":24,"nodeType":"152","messageId":"153","endLine":27,"endColumn":25,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"151","line":27,"column":37,"nodeType":"152","messageId":"153","endLine":27,"endColumn":38,"suggestions":"161"},{"ruleId":"150","severity":1,"message":"155","line":27,"column":39,"nodeType":"152","messageId":"153","endLine":27,"endColumn":40,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":1,"column":31,"nodeType":"165","messageId":"166","endLine":1,"endColumn":41},{"ruleId":"163","severity":1,"message":"167","line":1,"column":48,"nodeType":"165","messageId":"166","endLine":1,"endColumn":52},{"ruleId":"163","severity":1,"message":"168","line":16,"column":5,"nodeType":"165","messageId":"166","endLine":16,"endColumn":19},{"ruleId":"163","severity":1,"message":"169","line":17,"column":5,"nodeType":"165","messageId":"166","endLine":17,"endColumn":19},{"ruleId":"163","severity":1,"message":"170","line":13,"column":21,"nodeType":"165","messageId":"166","endLine":13,"endColumn":33},{"ruleId":"163","severity":1,"message":"164","line":1,"column":31,"nodeType":"165","messageId":"166","endLine":1,"endColumn":41},{"ruleId":"163","severity":1,"message":"167","line":1,"column":48,"nodeType":"165","messageId":"166","endLine":1,"endColumn":52},{"ruleId":"163","severity":1,"message":"171","line":7,"column":5,"nodeType":"165","messageId":"166","endLine":7,"endColumn":23},{"ruleId":"163","severity":1,"message":"172","line":8,"column":5,"nodeType":"165","messageId":"166","endLine":8,"endColumn":23},{"ruleId":"163","severity":1,"message":"173","line":9,"column":5,"nodeType":"165","messageId":"166","endLine":9,"endColumn":23},{"ruleId":"163","severity":1,"message":"174","line":13,"column":5,"nodeType":"165","messageId":"166","endLine":13,"endColumn":25},{"ruleId":"163","severity":1,"message":"175","line":14,"column":5,"nodeType":"165","messageId":"166","endLine":14,"endColumn":25},{"ruleId":"163","severity":1,"message":"176","line":15,"column":5,"nodeType":"165","messageId":"166","endLine":15,"endColumn":25},{"ruleId":"163","severity":1,"message":"177","line":16,"column":5,"nodeType":"165","messageId":"166","endLine":16,"endColumn":18},{"ruleId":"163","severity":1,"message":"178","line":17,"column":5,"nodeType":"165","messageId":"166","endLine":17,"endColumn":18},{"ruleId":"163","severity":1,"message":"179","line":18,"column":5,"nodeType":"165","messageId":"166","endLine":18,"endColumn":18},{"ruleId":"163","severity":1,"message":"172","line":4,"column":5,"nodeType":"165","messageId":"166","endLine":4,"endColumn":23},{"ruleId":"163","severity":1,"message":"173","line":5,"column":5,"nodeType":"165","messageId":"166","endLine":5,"endColumn":23},{"ruleId":"163","severity":1,"message":"175","line":8,"column":5,"nodeType":"165","messageId":"166","endLine":8,"endColumn":25},{"ruleId":"163","severity":1,"message":"176","line":9,"column":5,"nodeType":"165","messageId":"166","endLine":9,"endColumn":25},{"ruleId":"163","severity":1,"message":"178","line":10,"column":5,"nodeType":"165","messageId":"166","endLine":10,"endColumn":18},{"ruleId":"163","severity":1,"message":"179","line":11,"column":5,"nodeType":"165","messageId":"166","endLine":11,"endColumn":18},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],["180"],["181"],["180"],["181"],["180"],["181"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'diaries.length', 'getCount', and 'prevDiaryLength'. Either include them or remove the dependency array.","ArrayExpression",["182"],"React Hook useEffect has missing dependencies: 'dispatch', 'isAuth', 'props.history', and 'user'. Either include them or remove the dependency array.",["183"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["184","185"],"Unnecessary escape character: \\..",["186","187"],["188","189"],["190","191"],["192","193"],["194","195"],["196","197"],["198","199"],"no-unused-vars","'takeLatest' is defined but never used.","Identifier","unusedVar","'call' is defined but never used.","'LOGOUT_SUCCESS' is defined but never used.","'LOGOUT_FAILURE' is defined but never used.","'setEditDiary' is assigned a value but never used.","'EDIT_DIARY_REQUEST' is defined but never used.","'EDIT_DIARY_SUCCESS' is defined but never used.","'EDIT_DIARY_FAILURE' is defined but never used.","'DELETE_DIARY_REQUEST' is defined but never used.","'DELETE_DIARY_SUCCESS' is defined but never used.","'DELETE_DIARY_FAILURE' is defined but never used.","'COUNT_REQUEST' is defined but never used.","'COUNT_SUCCESS' is defined but never used.","'COUNT_FAILURE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"messageId":"204","fix":"205","desc":"206"},{"messageId":"207","fix":"208","desc":"209"},{"messageId":"204","fix":"210","desc":"206"},{"messageId":"207","fix":"211","desc":"209"},{"messageId":"204","fix":"212","desc":"206"},{"messageId":"207","fix":"213","desc":"209"},{"messageId":"204","fix":"214","desc":"206"},{"messageId":"207","fix":"215","desc":"209"},{"messageId":"204","fix":"216","desc":"206"},{"messageId":"207","fix":"217","desc":"209"},{"messageId":"204","fix":"218","desc":"206"},{"messageId":"207","fix":"219","desc":"209"},{"messageId":"204","fix":"220","desc":"206"},{"messageId":"207","fix":"221","desc":"209"},{"messageId":"204","fix":"222","desc":"206"},{"messageId":"207","fix":"223","desc":"209"},"Update the dependencies array to be: [date, diaries.length, getCount, mode, prevDiaryLength]",{"range":"224","text":"225"},"Update the dependencies array to be: [dispatch, isAuth, props.history, user]",{"range":"226","text":"227"},"removeEscape",{"range":"228","text":"229"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"230","text":"231"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"232","text":"229"},{"range":"233","text":"231"},{"range":"234","text":"229"},{"range":"235","text":"231"},{"range":"236","text":"229"},{"range":"237","text":"231"},{"range":"238","text":"229"},{"range":"239","text":"231"},{"range":"240","text":"229"},{"range":"241","text":"231"},{"range":"242","text":"229"},{"range":"243","text":"231"},{"range":"244","text":"229"},{"range":"245","text":"231"},[1970,1982],"[date, diaries.length, getCount, mode, prevDiaryLength]",[3223,3225],"[dispatch, isAuth, props.history, user]",[1479,1480],"",[1479,1479],"\\",[1481,1482],[1481,1481],[1494,1495],[1494,1494],[1496,1497],[1496,1496],[928,929],[928,928],[930,931],[930,930],[943,944],[943,943],[945,946],[945,945]]